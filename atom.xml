<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Stray Birds</title>
  
  
  <link href="http://chen.cwxhmk.top/atom.xml" rel="self"/>
  
  <link href="http://chen.cwxhmk.top/"/>
  <updated>2025-02-02T03:29:13.168Z</updated>
  <id>http://chen.cwxhmk.top/</id>
  
  <author>
    <name>文欣</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>暑期的归家惊喜</title>
    <link href="http://chen.cwxhmk.top/2024/08/26/surprise-go-home/"/>
    <id>http://chen.cwxhmk.top/2024/08/26/surprise-go-home/</id>
    <published>2024-08-26T17:51:00.000Z</published>
    <updated>2025-02-02T03:29:13.168Z</updated>
    
    <content type="html"><![CDATA[<p>　　一时的心血来潮，萌生了回家一趟的想法。四个月没回家了，还挺想回家看看的。<br>　　火车硬卧十几个小时，虽然包括了一个可以闭着眼睛度过的夜晚，但却比我想象中难熬，因为我在喧闹的环境下根本睡不踏实。车厢连接处不间断的叮叮当当，到站下车的旅客拖着行李从昏暗的走廊穿行，窗外时不时传来狂风暴雨般的巨响，但神奇的是火车停站时周遭又会突然变得很安静。走廊熄灯后还好些，否则还要忍受不知从何处传来的二手烟🚬，烟味混杂在空气里，强行混入我的呼吸。耳边偶尔传来列车员播报的“列车内禁止吸烟”，属实有些讽刺。<br>　　半夜一点多醒来以后我便不困了，躺在床上有点热也有点渴，索性坐起来。意识清醒一些以后，我才发现外面根本没有狂风暴雨，聒噪的呼呼声来自头顶的中央空调。我无事可干，打开电脑填了会社会实践的表，又找插座给手机充了会电。凌晨三点困意袭来，再去睡会儿。<br>　　说起来这车厢的温度，也是起伏不定，入睡前冷，半夜又热，清晨又开始冷，冷得我恨不得没有一寸皮肤露在外面。早上六点多车厢内陆陆续续有人开始活动了，察觉到旁边有人想拉开窗帘，我就起床了。说是起床，也只是坐起身来，从昨天上车到现在还没有洗漱，有些难受。回家以后一定要马上洗个澡！<br>　　这是我第一次瞒着家人悄悄回家，直到坐上绿皮火车后，我都无法想象他们发现我突然回家时会是什么样的场景。之前总是顾及这顾及那，不是路途遥远，就是工作繁忙，这次终于勇敢了一次，我想向那个总是畏畏缩缩的自己证明，杭州到聊城的距离并没有那么远。<br>　　随着火车逐渐靠近聊城，我脑海中与家人在一起的回忆愈发鲜活，想象中相见时的画面愈发清晰。我望向窗外的大片玉米地，不禁弯了嘴角。师弟说的对，人只会为自己没能去做的事情后悔。回家，我永远不会后悔。<br>　　我原本计划下火车后坐公交回家，但把一个秘密瞒了那么久，我愈发渴望和别人倾诉，我思来想去，觉得我弟弟是个不错的人选。<br>　　我问他，你认不认识聊城火车站。<br>　　他发我一张百度地图的导航截图，说认识。<br>　　我说，我十点二十到火车站，你给电车充上电，到时候来接我，不要告诉其他人。<br>　　他说好，出发前还问我穿的厚不，聊城的天气有点冷。<br>　　我出站后在路边等他时，看着路边来往的出租车和公交车，我一点也不心动，因为我在等我的家人。我弟弟果然如我妈所说，大夏天练体育晒得全身黝黑，不过依旧很帅气。<br>　　从火车站骑电动车到我家需要四十多分钟的车程，我们边走边聊，十一点半电车电量告急时我们正好到家门口。我试了几次指纹解锁都失败了，索性用人脸识别。“用户08欢迎回家”，虽然这个编号不常出现，但我猜爷爷奶奶肯定还意识不到是我回来了。<br>　　我打开门，奶奶正拿着手机准备给我爸爸打电话，询问我弟弟去哪里了，怎么还不回家吃饭。看到是我回来了，奶奶的表情又是震惊又是开心，说做梦也想不到是我回家了。奶奶说她上午打了几个喷嚏，心想是谁想她了，没想到中午我就回家了。我说，当然是我想你啦。<br>　　爷爷从厨房闻声出来，刚把炒好的丝瓜端出来，就招呼奶奶再去给我煮一碗面条。我连忙说不用那么麻烦，可爷爷奶奶坚持“起脚扁食落脚面”。<br>　　奶奶煮面条时还问我，怎么昨天下午不在电话里说。<br>　　我说，这不是给你个惊喜嘛。<br>　　奶奶回想了一下我们昨天的通话，说怪不得你问家里有什么菜，还跟我说想吃我包的韭菜包子。<br>　　我本来想等爸爸妈妈下班回家以后给他们一个惊喜，没想到我家监控检测到有人经过就会“滴”一声，然后给手机发通知，而我妈白天又习惯性看家里的监控，自然发现了一些猫腻。<br>　　我妈给我弟弟打电话，你带回家的那个女孩是谁？<br>　　我弟，你自己看监控没看到是谁吗？<br>　　我妈，我在监控里看不清。<br>　　我弟，你妮儿。<br>　　就这样，我妈受到了我回家的消息的第一次冲击，我弟弟说是我，她从监控里看着沙发上的书包也像是我的，但她还是不敢相信。在午饭后我奶奶带着我和我弟弟去菜园里割韭菜时，我妈又向我爷爷打电话确认了一遍，我妈才相信我回家了。她给我打了几个视频，我没接到，我随手拍了一张我们在菜地的照片发了过去。晚上我才知道，我爸也受到了我妈妈的电话轰炸，一看手机，四个未接电话。<br>　　下午洗完澡一觉睡到五点，家里的床真舒服。<br>　　虽然没有当面看见爸爸妈妈的表情，但我想应该是很开心的吧。爸爸妈妈还小小担心了一下是不是我像大学那样在学校受欺负了，但晚上回家看到我好好的就打消了这个疑虑。爸爸妈妈提前知道我回家的好处就是，晚上下班后会给我买很多好吃的！妈妈买了猪蹄和焖子，爸爸买了烤鸭，爷爷奶奶烙了韭菜盒子，又是“简简单单”的一餐。<br>　　晚上和妈妈一起去姥娘家玩，在路上的时候妈妈提前打了个电话，问我姥娘睡觉了没有，她快走到楼下了。<br>　　我问妈妈，你怎么不跟我姥娘说我也来。<br>　　妈妈说，给你姥娘一个惊喜。<br>　　我心想，我妈学的还挺快。<br>　　第二天妈妈请了一天假在家陪我，上午带我去换断掉的手链，添了些钱买了个新的（此处感谢爸爸的红包助力！）。<br>　　中午回到家发现大娘、嫂子还有小朋友们都在爷爷奶奶家，在一起包韭菜包子，嘿嘿˙ᗜ˙，我小侄子知道我是他姑姑了！<br>　　下午我和弟弟去看了电影，沈腾不演喜剧确实有点看不习惯。<br>　　晚上一大家人去饭店聚餐，之前爷爷奶奶过生日总是去饭店吃好吃的，我总是在学校都赶不上，这次我爸也带我奢侈了一次，开心开心！吃饭的时候不禁感叹，山东人的酒桌文化是耳濡目染的，倒酒、敬酒碰杯，要从娃娃抓起。<br>　　没想到流水账式的记录竟然写了两千多字，在家一天半时间虽短却非常充实。不同于在学校，两眼一睁就是赶校车，在实验室每天就是训鼠、收集数据和分析数据，有时觉得自己跟人机一样，快进化为没有感情的工作机器了。<br>　　偶尔回家放松放松，和家人在一起，总是幸福的🥰。　　　　　　　　</p>]]></content>
    
    
    <summary type="html">爸爸妈妈也会喜欢惊喜的~</summary>
    
    
    
    <category term="生活随笔" scheme="http://chen.cwxhmk.top/categories/%E7%94%9F%E6%B4%BB%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>Matlab调用Pytorch模型</title>
    <link href="http://chen.cwxhmk.top/2024/07/24/matlab-run-pytorch-model/"/>
    <id>http://chen.cwxhmk.top/2024/07/24/matlab-run-pytorch-model/</id>
    <published>2024-07-24T11:18:29.000Z</published>
    <updated>2025-02-02T03:29:13.167Z</updated>
    
    <content type="html"><![CDATA[<h1 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h1><ol><li>查看matlab与python的版本对应关系 <a href="https://ww2.mathworks.cn/support/requirements/python-compatibility.html">Versions of Python Compatible with MATLAB Products by Release</a><br>我用的是matlab_r2021a，支持python3.8。</li><li>找到python解释器的位置<br>我之前把pytorch装在了虚拟环境dl中，所以要找到这个虚拟环境下python解释器的位置。<figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">conda activate dl</span><br><span class="line">where python</span><br><span class="line">/Users/wenxin/opt/anaconda3/envs/dl/bin/python</span><br></pre></td></tr></table></figure></li><li>将matlab中的python版本设置为指定路径的python解释器<figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; pyenv(<span class="string">&#x27;Version&#x27;</span>, <span class="string">&#x27;/Users/wenxin/opt/anaconda3/envs/dl/bin/python&#x27;</span>)</span><br><span class="line">&gt;&gt; pyversion</span><br><span class="line"></span><br><span class="line">       version: <span class="string">&#x27;3.8&#x27;</span></span><br><span class="line">    executable: <span class="string">&#x27;/Users/wenxin/opt/anaconda3/envs/dl/bin/python&#x27;</span></span><br><span class="line">       library: <span class="string">&#x27;/Users/wenxin/opt/anaconda3/envs/dl/lib/libpython3.8.dylib&#x27;</span></span><br><span class="line">          home: <span class="string">&#x27;/Users/wenxin/opt/anaconda3/envs/dl&#x27;</span></span><br><span class="line">      isloaded: <span class="number">0</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="Python端"><a href="#Python端" class="headerlink" title="Python端"></a>Python端</h1><h2 id="simple-model-py"><a href="#simple-model-py" class="headerlink" title="simple_model.py"></a>simple_model.py</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 神经网络模型</span></span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SimpleModel</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(SimpleModel, self).__init__()</span><br><span class="line">        self.linear = nn.Linear(<span class="number">10</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        <span class="keyword">return</span> self.linear(x)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将状态字典保存为.pth文件（只保存模型的权重和偏置，而不保存模型结构）</span></span><br><span class="line"><span class="comment"># model = SimpleModel()</span></span><br><span class="line"><span class="comment"># torch.save(model.state_dict(), &#x27;Code/simple_model.pth&#x27;)</span></span><br></pre></td></tr></table></figure><h2 id="inference-py"><a href="#inference-py" class="headerlink" title="inference.py"></a>inference.py</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 网络预测部分</span></span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> simple_model <span class="keyword">import</span> SimpleModel</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">prediction</span>(<span class="params">params_path, data</span>):</span><br><span class="line">    model = SimpleModel()</span><br><span class="line">    model.load_state_dict(torch.load(params_path, map_location=torch.device(<span class="string">&#x27;cpu&#x27;</span>)))</span><br><span class="line">    model.<span class="built_in">eval</span>() <span class="comment"># 将模型设置为评估模式</span></span><br><span class="line">    data = torch.tensor(data, dtype=torch.float32)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> torch.no_grad():</span><br><span class="line">        pred = model(data)</span><br><span class="line">    <span class="keyword">return</span> pred.numpy()</span><br></pre></td></tr></table></figure><h1 id="Matlab端"><a href="#Matlab端" class="headerlink" title="Matlab端"></a>Matlab端</h1><h2 id="test-simple-model-m"><a href="#test-simple-model-m" class="headerlink" title="test_simple_model.m"></a>test_simple_model.m</h2><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">in_data = <span class="built_in">ones</span>(<span class="number">1</span>, <span class="number">10</span>) * <span class="number">0.6</span>;</span><br><span class="line">pred = matpy(<span class="string">&#x27;simple_model.pth&#x27;</span>, in_data);</span><br><span class="line"><span class="built_in">disp</span>(pred);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">pred</span> = <span class="title">matpy</span><span class="params">(params_path, data)</span></span></span><br><span class="line">    model = py.importlib.import_module(<span class="string">&#x27;inference&#x27;</span>);</span><br><span class="line">    pred = model.prediction(pyargs(<span class="string">&#x27;params_path&#x27;</span>, params_path, <span class="string">&#x27;data&#x27;</span>, data));</span><br><span class="line">    pred = double(pred);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><ul><li><a href="https://zhuanlan.zhihu.com/p/536858806">MATLAB调用Pytorch神经网络模型进行预测</a></li><li><a href="https://ww2.mathworks.cn/help/matlab/matlab_external/create-object-from-python-class.html">从MATLAB访问Python模块-快速入门</a></li><li><a href="https://blog.csdn.net/chlet/article/details/130422820">深入理解Pytorch中模型保存文件pth</a></li></ul>]]></content>
    
    
    <summary type="html">我们记录到的实验数据一般都转为.mat格式，需要使用matlab进行后续的数据分析，但我又想调用训练好的pytorch模型，所以小小地探索了一下调用方法。</summary>
    
    
    
    <category term="项目实战" scheme="http://chen.cwxhmk.top/categories/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/"/>
    
    
    <category term="Python" scheme="http://chen.cwxhmk.top/tags/Python/"/>
    
    <category term="Matlab" scheme="http://chen.cwxhmk.top/tags/Matlab/"/>
    
  </entry>
  
  <entry>
    <title>解决键盘Win+L无法锁屏</title>
    <link href="http://chen.cwxhmk.top/2024/01/25/win-l-invalid/"/>
    <id>http://chen.cwxhmk.top/2024/01/25/win-l-invalid/</id>
    <published>2024-01-25T04:48:07.000Z</published>
    <updated>2025-02-02T03:29:13.168Z</updated>
    
    <content type="html"><![CDATA[<p>这两天按键盘上的Win+L键突然不能锁屏了，隐约记得之前也遇到过类似的问题，但之前没有记录下来。这次又遇到了，找到解决方案后马上记录！</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>第一步：按下Ctrl+Esc键（Win键的组合键），看看是否好用，如果是好的情况，那么大概率是Win键被锁住了。</p><p>第二步：按下Fn+Win键，解开Win键，此时Win+L已经可以使用了。</p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ul><li><a href="https://blog.csdn.net/weixin_43947456/article/details/107952943">解决Windows键+L不能锁屏的问题</a></li></ul>]]></content>
    
    
    <summary type="html">记录解决键盘win+l无法锁屏的方法。</summary>
    
    
    
    <category term="方法教程" scheme="http://chen.cwxhmk.top/categories/%E6%96%B9%E6%B3%95%E6%95%99%E7%A8%8B/"/>
    
    
  </entry>
  
  <entry>
    <title>小鼠脑图谱——脑区定位</title>
    <link href="http://chen.cwxhmk.top/2024/01/17/mice-brain-atlas/"/>
    <id>http://chen.cwxhmk.top/2024/01/17/mice-brain-atlas/</id>
    <published>2024-01-17T02:40:07.000Z</published>
    <updated>2025-02-02T03:29:13.167Z</updated>
    
    <content type="html"><![CDATA[<h1 id="小鼠脑立体定位图谱"><a href="#小鼠脑立体定位图谱" class="headerlink" title="小鼠脑立体定位图谱"></a>小鼠脑立体定位图谱</h1><div class="row">    <embed src="https://img.cwxhmk.top/pdf/mice_brain_atlas_v4.pdf" width="100%" height="550" type="application/pdf"></div><h1 id="小鼠脑立体定位图谱网页版"><a href="#小鼠脑立体定位图谱网页版" class="headerlink" title="小鼠脑立体定位图谱网页版"></a>小鼠脑立体定位图谱网页版</h1><p>之前就听说有一个网站，输入脑立体定位坐标（ML、AP、DV）后就可以看位点在图谱中的位置，今天偶然在丁香园社区中看到了一个帖子，分享的正是我想找的网站。不过需要注意实验小鼠的体重尽量与图谱保持一致（26~30g）。</p><ul><li><a href="http://labs.gaidi.ca/mouse-brain-atlas/">小鼠脑图谱</a></li><li><a href="http://labs.gaidi.ca/rat-brain-atlas/">大鼠脑图谱</a></li></ul><p>网页中会用红点🔴标识位点在冠状面和矢状面的位置。以lOFC为例，输入(2.6, 1.3, -2.2)，即可得到位点所在冠状面和矢状面（此处我没有保存带位点的图片）。注意日常习惯的坐标顺序是(AP, ML, DV)，但是网站中坐标顺序是ML在前，输入时务必注意。<br><img src="http://labs.gaidi.ca/mouse-brain-atlas/images/Mouse_Brain_Atlas_8.jpg"><br><img src="http://labs.gaidi.ca/mouse-brain-atlas/images/Mouse_Brain_Atlas_111.jpg"></p><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><ul><li><a href="https://www.dxy.cn/bbs/newweb/pc/post/43382059">小鼠和大鼠的大脑立体定位图谱</a></li></ul>]]></content>
    
    
    <summary type="html">分享查找脑区位点坐标的网站。</summary>
    
    
    
    <category term="方法教程" scheme="http://chen.cwxhmk.top/categories/%E6%96%B9%E6%B3%95%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="脑图谱" scheme="http://chen.cwxhmk.top/tags/%E8%84%91%E5%9B%BE%E8%B0%B1/"/>
    
  </entry>
  
  <entry>
    <title>使用matlab向串口收发数据</title>
    <link href="http://chen.cwxhmk.top/2024/01/12/matlab-serialport/"/>
    <id>http://chen.cwxhmk.top/2024/01/12/matlab-serialport/</id>
    <published>2024-01-12T09:19:51.000Z</published>
    <updated>2025-02-02T03:29:13.167Z</updated>
    
    <content type="html"><![CDATA[<p>我想获取到行为端的数据，以及控制TFT屏幕显示不同的内容。之前只是简单地使用过arduino ide的串口调试器，将刺激呈现的时间戳发送给串口。昨天看到一篇<a href="https://zhuanlan.zhihu.com/p/379766979">教程</a>，提及matlab可以接收串口数据，经查阅，也可以向串口发送数据，这样一来就可以在matlab中直接获取串口内的时间戳，也可以通过串口给arduino发送控制信息。</p><h1 id="matlab端"><a href="#matlab端" class="headerlink" title="matlab端"></a>matlab端</h1><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">s = serialport(<span class="string">&#x27;COM7&#x27;</span>, <span class="number">9600</span>);</span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span></span><br><span class="line">    write(s, trial_types(randi(<span class="built_in">size</span>(trial_types,<span class="number">2</span>))), <span class="string">&quot;string&quot;</span>); <span class="comment">% 向串口写数据</span></span><br><span class="line">    str = readline(s); <span class="comment">% 从串口读数据</span></span><br><span class="line">    <span class="built_in">disp</span>(strtrim(str));</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h1 id="arduino端"><a href="#arduino端" class="headerlink" title="arduino端"></a>arduino端</h1><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">begin</span>(<span class="number">9600</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">String</span> <span class="title">readLine</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="type">String</span> str = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="keyword">while</span>(<span class="built_in">Serial</span>.<span class="built_in">available</span>())&#123;</span><br><span class="line">    str += <span class="built_in">char</span>(<span class="built_in">Serial</span>.<span class="built_in">read</span>());</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">2</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="type">String</span> str = <span class="built_in">readLine</span>();</span><br><span class="line">  <span class="keyword">if</span> (str.<span class="built_in">length</span>() != <span class="number">0</span>)&#123;</span><br><span class="line">    <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="string">&quot;Arduino: &quot;</span> + str);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h1><ol><li>端口号可以在设备管理器的端口中查看</li><li>使用matlab向串口发送数据有一定的延时，最好的解决方案是放在while循环中</li></ol><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><ul><li><a href="http://www.zlmcu.com/document/com_debug_tools.html">串口调试助手</a></li><li><a href="https://zhuanlan.zhihu.com/p/379766979">9天学会Arduino系列- 3 串口的数据传送</a></li><li><a href="https://www.bilibili.com/video/BV1at4y187yf">python与arduino通信教程</a></li></ul>]]></content>
    
    
    <summary type="html">串口是个好东西！</summary>
    
    
    
    <category term="方法教程" scheme="http://chen.cwxhmk.top/categories/%E6%96%B9%E6%B3%95%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="arduino" scheme="http://chen.cwxhmk.top/tags/arduino/"/>
    
  </entry>
  
  <entry>
    <title>【arduino探索】点亮ST7789 1.3寸TFT屏幕</title>
    <link href="http://chen.cwxhmk.top/2024/01/09/arduino-tft/"/>
    <id>http://chen.cwxhmk.top/2024/01/09/arduino-tft/</id>
    <published>2024-01-09T05:07:15.000Z</published>
    <updated>2025-02-02T03:29:13.165Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Adafruit-GFX-Library"><a href="#Adafruit-GFX-Library" class="headerlink" title="Adafruit-GFX-Library"></a>Adafruit-GFX-Library</h1><p>该类库为所有彩色屏幕的基础类库，安装方式：在Arduino的项目-加载库-库管理器中搜索Adafruit GFX Library，选择最新版本进行安装。<a href="https://github.com/adafruit/Adafruit-GFX-Library">Github下载地址</a><br>Arduino中的第三方库的存放地址可以在首选项-项目文件夹位置处查看，该路径下的libraries文件夹下即为第三方库的存放地址。</p><h1 id="Arduino-ST7789-Library"><a href="#Arduino-ST7789-Library" class="headerlink" title="Arduino-ST7789-Library"></a>Arduino-ST7789-Library</h1><p>该类库为ST7789的专用驱动库。<a href="https://github.com/lspoplove/Arduino-ST7789-Library">Github下载地址</a><br>运行画直线的程序，用时约32.6s，太慢了，每次黑屏都要等半天！</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Adafruit_GFX.h&gt;</span>    <span class="comment">// Core graphics library by Adafruit</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Arduino_ST7789.h&gt;</span> <span class="comment">// Hardware-specific library for ST7789 (with or without CS pin)</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;SPI.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TFT_DC    8</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TFT_RST   7  <span class="comment">//9 </span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TFT_CS    9  <span class="comment">//10 // only for displays with CS pin</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TFT_MOSI  11   <span class="comment">// for hardware SPI data pin (all of available pins)</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TFT_SCLK  13   <span class="comment">// for hardware SPI sclk pin (all of available pins)</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> w 240</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> h 240</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Arduino_ST7789 tft = <span class="built_in">Arduino_ST7789</span>(TFT_DC, TFT_RST, TFT_MOSI, TFT_SCLK, TFT_CS); <span class="comment">//for display with CS pin</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="keyword">inline</span> <span class="type">uint32_t</span> <span class="title">micros_start</span><span class="params">()</span> __<span class="title">attribute__</span><span class="params">((always_inline))</span></span>;</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="keyword">inline</span> <span class="type">uint32_t</span> <span class="title">micros_start</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="type">uint8_t</span> oms = <span class="built_in">millis</span>();</span><br><span class="line">  <span class="keyword">while</span> ((<span class="type">uint8_t</span>)<span class="built_in">millis</span>() == oms)</span><br><span class="line">    ;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">micros</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setup</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">begin</span>(<span class="number">9600</span>);</span><br><span class="line">  tft.<span class="built_in">init</span>(w, h);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loop</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="type">uint32_t</span> start = <span class="built_in">micros_start</span>();</span><br><span class="line"></span><br><span class="line">  tft.<span class="built_in">fillScreen</span>(BLACK);</span><br><span class="line">  <span class="built_in">testLines</span>();</span><br><span class="line">  </span><br><span class="line">  <span class="type">uint32_t</span> usecLines = <span class="built_in">micros</span>() - start;</span><br><span class="line">  tft.<span class="built_in">setCursor</span>(<span class="number">0</span>, <span class="number">20</span>);</span><br><span class="line">  tft.<span class="built_in">setTextSize</span>(<span class="number">3</span>);</span><br><span class="line">  tft.<span class="built_in">setTextColor</span>(RED);</span><br><span class="line">  tft.<span class="built_in">println</span>(<span class="string">&quot;Cost Time:&quot;</span>);</span><br><span class="line"></span><br><span class="line">  tft.<span class="built_in">setCursor</span>(<span class="number">0</span>, <span class="number">50</span>);</span><br><span class="line">  tft.<span class="built_in">setTextSize</span>(<span class="number">4</span>);</span><br><span class="line">  tft.<span class="built_in">setTextColor</span>(RED);</span><br><span class="line">  tft.<span class="built_in">println</span>(usecLines);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">60</span> * <span class="number">1000L</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int32_t</span> <span class="title">testLines</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="type">uint32_t</span> start;</span><br><span class="line">  <span class="type">int32_t</span> x1, y1, x2, y2;</span><br><span class="line"></span><br><span class="line">  start = <span class="built_in">micros_start</span>();</span><br><span class="line"></span><br><span class="line">  x1 = y1 = <span class="number">0</span>;</span><br><span class="line">  y2 = h - <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> (x2 = <span class="number">0</span>; x2 &lt; w; x2 += <span class="number">6</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    tft.<span class="built_in">drawLine</span>(x1, y1, x2, y2, BLUE);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> ESP8266</span></span><br><span class="line">    <span class="built_in">yield</span>(); <span class="comment">// avoid long run triggered ESP8266 WDT restart</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">  x2 = w - <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> (y2 = <span class="number">0</span>; y2 &lt; h; y2 += <span class="number">6</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    tft.<span class="built_in">drawLine</span>(x1, y1, x2, y2, BLUE);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> ESP8266</span></span><br><span class="line">    <span class="built_in">yield</span>(); <span class="comment">// avoid long run triggered ESP8266 WDT restart</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">  x1 = w - <span class="number">1</span>;</span><br><span class="line">  y1 = <span class="number">0</span>;</span><br><span class="line">  y2 = h - <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> (x2 = <span class="number">0</span>; x2 &lt; w; x2 += <span class="number">6</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    tft.<span class="built_in">drawLine</span>(x1, y1, x2, y2, BLUE);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> ESP8266</span></span><br><span class="line">    <span class="built_in">yield</span>(); <span class="comment">// avoid long run triggered ESP8266 WDT restart</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">  x2 = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (y2 = <span class="number">0</span>; y2 &lt; h; y2 += <span class="number">6</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    tft.<span class="built_in">drawLine</span>(x1, y1, x2, y2, BLUE);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> ESP8266</span></span><br><span class="line">    <span class="built_in">yield</span>(); <span class="comment">// avoid long run triggered ESP8266 WDT restart</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">  x1 = <span class="number">0</span>;</span><br><span class="line">  y1 = h - <span class="number">1</span>;</span><br><span class="line">  y2 = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (x2 = <span class="number">0</span>; x2 &lt; w; x2 += <span class="number">6</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    tft.<span class="built_in">drawLine</span>(x1, y1, x2, y2, BLUE);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> ESP8266</span></span><br><span class="line">    <span class="built_in">yield</span>(); <span class="comment">// avoid long run triggered ESP8266 WDT restart</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">  x2 = w - <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> (y2 = <span class="number">0</span>; y2 &lt; h; y2 += <span class="number">6</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    tft.<span class="built_in">drawLine</span>(x1, y1, x2, y2, BLUE);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> ESP8266</span></span><br><span class="line">    <span class="built_in">yield</span>(); <span class="comment">// avoid long run triggered ESP8266 WDT restart</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">  x1 = w - <span class="number">1</span>;</span><br><span class="line">  y1 = h - <span class="number">1</span>;</span><br><span class="line">  y2 = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (x2 = <span class="number">0</span>; x2 &lt; w; x2 += <span class="number">6</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    tft.<span class="built_in">drawLine</span>(x1, y1, x2, y2, BLUE);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> ESP8266</span></span><br><span class="line">    <span class="built_in">yield</span>(); <span class="comment">// avoid long run triggered ESP8266 WDT restart</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">  x2 = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (y2 = <span class="number">0</span>; y2 &lt; h; y2 += <span class="number">6</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    tft.<span class="built_in">drawLine</span>(x1, y1, x2, y2, BLUE);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> ESP8266</span></span><br><span class="line">    <span class="built_in">yield</span>(); <span class="comment">// avoid long run triggered ESP8266 WDT restart</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">micros</span>() - start;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Arduino-GFX"><a href="#Arduino-GFX" class="headerlink" title="Arduino_GFX"></a>Arduino_GFX</h1><p>安装方式：在Arduino的项目-加载库-库管理器中搜索GFX Library For Arduino，选择最新版本进行安装。<a href="https://github.com/moononournation/Arduino_GFX">Github下载地址</a><br>运行画直线的程序，用时约5.7s，速度超级快！在测试Arduino_GFX的时候还发生了一个小插曲，我连线明明是正确的，但屏幕没有任何反应，排了很久的bug，最后发现是我的arduino开发板有问题，果然太便宜了容易出问题，以后还是用正版的arduino开发板吧！</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Arduino_GFX_Library.h&gt;</span></span></span><br><span class="line"><span class="type">int32_t</span> w, h;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* More dev device declaration: https://github.com/moononournation/Arduino_GFX/wiki/Dev-Device-Declaration */</span></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> defined(DISPLAY_DEV_KIT)</span></span><br><span class="line">Arduino_GFX *gfx = <span class="built_in">create_default_Arduino_GFX</span>();</span><br><span class="line"><span class="meta">#<span class="keyword">else</span> <span class="comment">/* !defined(DISPLAY_DEV_KIT) */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* More data bus class: https://github.com/moononournation/Arduino_GFX/wiki/Data-Bus-Class */</span></span><br><span class="line">Arduino_DataBus *bus = <span class="built_in">create_default_Arduino_DataBus</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">/* More display class: https://github.com/moononournation/Arduino_GFX/wiki/Display-Class */</span></span><br><span class="line">Arduino_GFX *gfx = <span class="keyword">new</span> <span class="built_in">Arduino_ST7789</span>(bus, DF_GFX_RST, <span class="number">0</span> <span class="comment">/* rotation */</span>, <span class="literal">true</span> <span class="comment">/* IPS */</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">/* !defined(DISPLAY_DEV_KIT) */</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="keyword">inline</span> <span class="type">uint32_t</span> <span class="title">micros_start</span><span class="params">()</span> __<span class="title">attribute__</span><span class="params">((always_inline))</span></span>;</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="keyword">inline</span> <span class="type">uint32_t</span> <span class="title">micros_start</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="type">uint8_t</span> oms = <span class="built_in">millis</span>();</span><br><span class="line">  <span class="keyword">while</span> ((<span class="type">uint8_t</span>)<span class="built_in">millis</span>() == oms)</span><br><span class="line">    ;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">micros</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setup</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">begin</span>(<span class="number">9600</span>);</span><br><span class="line">  gfx-&gt;<span class="built_in">begin</span>();</span><br><span class="line">  w = gfx-&gt;<span class="built_in">width</span>();</span><br><span class="line">  h = gfx-&gt;<span class="built_in">height</span>();</span><br><span class="line"></span><br><span class="line">  <span class="meta">#<span class="keyword">ifdef</span> DF_GFX_BL</span></span><br><span class="line">    <span class="built_in">pinMode</span>(DF_GFX_BL, <span class="literal">OUTPUT</span>);</span><br><span class="line">    <span class="built_in">digitalWrite</span>(DF_GFX_BL, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loop</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="type">uint32_t</span> start = <span class="built_in">micros_start</span>();</span><br><span class="line"></span><br><span class="line">  gfx-&gt;<span class="built_in">fillScreen</span>(BLACK);</span><br><span class="line">  <span class="built_in">testLines</span>();</span><br><span class="line">  </span><br><span class="line">  <span class="type">uint32_t</span> usecLines = <span class="built_in">micros</span>() - start;</span><br><span class="line"></span><br><span class="line">  gfx-&gt;<span class="built_in">setCursor</span>(<span class="number">0</span>, <span class="number">20</span>);</span><br><span class="line">  gfx-&gt;<span class="built_in">setTextSize</span>(<span class="number">3</span>);</span><br><span class="line">  gfx-&gt;<span class="built_in">setTextColor</span>(RED);</span><br><span class="line">  gfx-&gt;<span class="built_in">println</span>(<span class="built_in">F</span>(<span class="string">&quot;Cost Time:&quot;</span>));</span><br><span class="line"></span><br><span class="line">  gfx-&gt;<span class="built_in">setCursor</span>(<span class="number">0</span>, <span class="number">50</span>);</span><br><span class="line">  gfx-&gt;<span class="built_in">setTextSize</span>(<span class="number">4</span>);</span><br><span class="line">  gfx-&gt;<span class="built_in">setTextColor</span>(RED);</span><br><span class="line">  gfx-&gt;<span class="built_in">println</span>(usecLines);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">60</span> * <span class="number">1000L</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int32_t</span> <span class="title">testLines</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="type">uint32_t</span> start;</span><br><span class="line">  <span class="type">int32_t</span> x1, y1, x2, y2;</span><br><span class="line"></span><br><span class="line">  start = <span class="built_in">micros_start</span>();</span><br><span class="line"></span><br><span class="line">  x1 = y1 = <span class="number">0</span>;</span><br><span class="line">  y2 = h - <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> (x2 = <span class="number">0</span>; x2 &lt; w; x2 += <span class="number">6</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    gfx-&gt;<span class="built_in">drawLine</span>(x1, y1, x2, y2, BLUE);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> ESP8266</span></span><br><span class="line">    <span class="built_in">yield</span>(); <span class="comment">// avoid long run triggered ESP8266 WDT restart</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">  x2 = w - <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> (y2 = <span class="number">0</span>; y2 &lt; h; y2 += <span class="number">6</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    gfx-&gt;<span class="built_in">drawLine</span>(x1, y1, x2, y2, BLUE);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> ESP8266</span></span><br><span class="line">    <span class="built_in">yield</span>(); <span class="comment">// avoid long run triggered ESP8266 WDT restart</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">  x1 = w - <span class="number">1</span>;</span><br><span class="line">  y1 = <span class="number">0</span>;</span><br><span class="line">  y2 = h - <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> (x2 = <span class="number">0</span>; x2 &lt; w; x2 += <span class="number">6</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    gfx-&gt;<span class="built_in">drawLine</span>(x1, y1, x2, y2, BLUE);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> ESP8266</span></span><br><span class="line">    <span class="built_in">yield</span>(); <span class="comment">// avoid long run triggered ESP8266 WDT restart</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">  x2 = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (y2 = <span class="number">0</span>; y2 &lt; h; y2 += <span class="number">6</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    gfx-&gt;<span class="built_in">drawLine</span>(x1, y1, x2, y2, BLUE);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> ESP8266</span></span><br><span class="line">    <span class="built_in">yield</span>(); <span class="comment">// avoid long run triggered ESP8266 WDT restart</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">  x1 = <span class="number">0</span>;</span><br><span class="line">  y1 = h - <span class="number">1</span>;</span><br><span class="line">  y2 = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (x2 = <span class="number">0</span>; x2 &lt; w; x2 += <span class="number">6</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    gfx-&gt;<span class="built_in">drawLine</span>(x1, y1, x2, y2, BLUE);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> ESP8266</span></span><br><span class="line">    <span class="built_in">yield</span>(); <span class="comment">// avoid long run triggered ESP8266 WDT restart</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">  x2 = w - <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> (y2 = <span class="number">0</span>; y2 &lt; h; y2 += <span class="number">6</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    gfx-&gt;<span class="built_in">drawLine</span>(x1, y1, x2, y2, BLUE);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> ESP8266</span></span><br><span class="line">    <span class="built_in">yield</span>(); <span class="comment">// avoid long run triggered ESP8266 WDT restart</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">  x1 = w - <span class="number">1</span>;</span><br><span class="line">  y1 = h - <span class="number">1</span>;</span><br><span class="line">  y2 = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (x2 = <span class="number">0</span>; x2 &lt; w; x2 += <span class="number">6</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    gfx-&gt;<span class="built_in">drawLine</span>(x1, y1, x2, y2, BLUE);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> ESP8266</span></span><br><span class="line">    <span class="built_in">yield</span>(); <span class="comment">// avoid long run triggered ESP8266 WDT restart</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">  x2 = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (y2 = <span class="number">0</span>; y2 &lt; h; y2 += <span class="number">6</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    gfx-&gt;<span class="built_in">drawLine</span>(x1, y1, x2, y2, BLUE);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> ESP8266</span></span><br><span class="line">    <span class="built_in">yield</span>(); <span class="comment">// avoid long run triggered ESP8266 WDT restart</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">micros</span>() - start;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="TFT-eSPI"><a href="#TFT-eSPI" class="headerlink" title="TFT_eSPI"></a>TFT_eSPI</h1><p>在Arduino的库管理器中搜索TFT_eSPI，安装最新版本。<a href="https://github.com/Bodmer/TFT_eSPI">Github下载地址</a>经测试，这个库太大了，arduino uno开发板无法成功上传。</p><h1 id="参考内容"><a href="#参考内容" class="headerlink" title="参考内容"></a>参考内容</h1><ul><li><a href="https://blog.csdn.net/yulusilian1/article/details/118422711">Arduino ST7789 240*240 1.3寸 TFT —— 新屏点亮篇</a></li><li><a href="https://simple-circuit.com/arduino-st7789-ips-tft-display-example/">Interfacing Arduino with ST7789 TFT Display – Graphics Test Example</a></li><li><a href="https://blog.csdn.net/yulusilian1/article/details/118444105">Arduino ST7789 240*240 1.3寸 TFT —— 飞升之高效率显示驱动篇</a></li><li><a href="https://zhuanlan.zhihu.com/p/141616278">ESP32彩屏显示入门：我要五彩斑斓的黑 | ESP32学习之旅-Arduino版</a></li></ul>]]></content>
    
    
    <summary type="html">记录使用arduino点亮TFT屏幕的过程。</summary>
    
    
    
    <category term="方法教程" scheme="http://chen.cwxhmk.top/categories/%E6%96%B9%E6%B3%95%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="arduino" scheme="http://chen.cwxhmk.top/tags/arduino/"/>
    
  </entry>
  
  <entry>
    <title>Github Desktop同步代码</title>
    <link href="http://chen.cwxhmk.top/2024/01/05/github-desktop/"/>
    <id>http://chen.cwxhmk.top/2024/01/05/github-desktop/</id>
    <published>2024-01-05T02:46:45.000Z</published>
    <updated>2025-02-02T03:29:13.165Z</updated>
    
    <content type="html"><![CDATA[<p>Github Desktop主要有三个添加仓库的选项：</p><ol><li>Clone a Repository</li><li>Create a new Repository</li><li>Add Existing&#x2F;Local Repository</li></ol><p>如果想把github远程仓库的代码克隆到本地，选择<code>Clone a Repository</code>，即可把远程仓库下载到指定的本地路径。</p><p>如果想创建新的仓库，选择<code>Create a new Repository</code>。</p><p>如果想把本地文件夹作为新的仓库上传到github，选择<code>Add Local Repository</code>。</p><p>如果本地改动了仓库中的代码，点击<code>Commit to main</code>，然后<code>Push origin</code>，即将新的代码推送到github上。<code>Fetching origin</code>是把github上的代码拉到本地。</p><div class="note warning flat"><ul><li>不要轻易同意删除本地仓库！！！警惕带<code>local</code>的选项！如果不小心删除了，尝试去回收站找回。</li><li>大部分情况下，创建仓库时选择<code>Keep this code private</code>。</li><li>不要一次性上传很多文件，也不要反复<code>push</code>代码，撤销<code>push</code>操作可能会误删本地代码！</li><li>同步重要数据时提前把数据复制到别的地方，做好备份，给自己留个后路！</li></ul></div>]]></content>
    
    
    <summary type="html">上午同步代码到github，不小心把本地仓库删除了，那一瞬间我仿佛把所有的伤心事都想了一遍，还好在回收站找回了，必须记录一下github desktop的操作方法。</summary>
    
    
    
    <category term="方法教程" scheme="http://chen.cwxhmk.top/categories/%E6%96%B9%E6%B3%95%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Github Desktop" scheme="http://chen.cwxhmk.top/tags/Github-Desktop/"/>
    
  </entry>
  
  <entry>
    <title>下载教育版origin</title>
    <link href="http://chen.cwxhmk.top/2024/01/04/install-origin/"/>
    <id>http://chen.cwxhmk.top/2024/01/04/install-origin/</id>
    <published>2024-01-04T08:44:28.000Z</published>
    <updated>2025-02-02T03:29:13.166Z</updated>
    
    <content type="html"><![CDATA[<p>之前在联想电脑上安装过origin，今天想在mac的虚拟机上也安一个origin，结果发现我不记得怎么下载了，也不记得之前是从哪里找到的正版安装途径，今天在搜索过程中竟然连官网都找错了，索性记录一下安装过程。</p><p>进入<a href="https://www.originlab.com/">origin官网</a>，点击顶部的<code>Try Origin for Free</code>，选择<code>I have NEVER used Origin</code>和<code>Student</code>，点击继续，即可看到如下的界面。<br><img src="https://img.cwxhmk.top/post/origin_install_1.jpg"></p><p>选择<code>Learning Edition</code>，填写姓名、学校、邮箱等信息。填写完提交后去教育邮箱中验证，即可收到软件的下载链接、序列号和密钥。<br><img src="https://img.cwxhmk.top/post/origin_install_2.jpg"></p><div class="note warning flat"><p>用同一个教育邮箱申请账号的话，得到的密钥是同一个，如果已经激活过origin软件，就不能在别的电脑上安装origin时使用了。┭┮﹏┭┮</p></div>]]></content>
    
    
    <summary type="html">记录下载和安装origin的过程</summary>
    
    
    
    <category term="方法教程" scheme="http://chen.cwxhmk.top/categories/%E6%96%B9%E6%B3%95%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="软件安装" scheme="http://chen.cwxhmk.top/tags/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>在网页中实时显示当前时间</title>
    <link href="http://chen.cwxhmk.top/2024/01/01/html-show-current-time/"/>
    <id>http://chen.cwxhmk.top/2024/01/01/html-show-current-time/</id>
    <published>2024-01-01T08:51:25.000Z</published>
    <updated>2025-02-02T03:29:13.166Z</updated>
    
    <content type="html"><![CDATA[<p>早上吃完早饭去浙大图书馆主馆逛了一圈，终于见识到了传说中的自习区域墨水屏幕，确实很高级，如果这个座位被人预约了，屏幕上会显示预约人的姓名和预约时间！之前的基础图书馆里面很少有计算机相关的书籍，没想到新开的主馆里弥补了这个缺憾。</p><p>我上午看了一本arduino编程相关的书籍，对蓝牙和wifi模块很感兴趣，书中对这两个模块的使用只是举了一个很简单的例子，连接的都是arduino开发板的串口收发口，可以实现手机与arduino串口监视器的通信。</p><p>书中最后举了一个智能温室大棚的例子，我一直不太理解怎么实现手机远程控制arduino端的传感器。中午请教了一下康康，梳理了一下大致流程：arduino板连接wifi模块，接入校园网，向服务器发送传感器数据，可以存入txt文件或数据库中，手机或网页端通过服务器获取到传感器的数据，可以每隔1s请求一次数据。</p><div class="note info flat"><p>上位机：指可以<code>直接发送操作指令</code>的计算机或单片机，一般提供用户操作交互界面并向用户展示反馈数据。</p><p>下位机：指直接与机器相连接的计算机或单片机，一般用于<code>接收和反馈上位机的指令</code>，并且<code>根据指令控制机器执行动作</code>以及<code>从机器传感器读取数据</code>。</p><p>上位机给下位机发送控制命令，下位机收到此命令并执行相应的动作。<br>上位机给下位机发送状态获取命令，下位机收到此命令后调用传感器测量，然后转为数字信息反馈给上位机。<br>下位机主动发送状态信息或报警信息给上位机。</p></div><p>我一直困惑间隔1s请求一次数据，是否会在网页上看到数据刷新时的闪烁，为了解决这个困惑，康康建议我写个简单的网页测试一下，每个1s获取一下当前的时间。经实践测试，人眼并不会看到数据刷新时的闪烁。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">    &lt;script src=&quot;https://code.jquery.com/jquery-3.1.1.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=&quot;time-now&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        setInterval(function ()&#123;</span><br><span class="line">            $(&#x27;#time-now&#x27;).text(new Date())</span><br><span class="line">        &#125;, 1000)</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><ul><li><a href="https://blog.csdn.net/qq_35394434/article/details/83747008">在html页面实时显示系统时间</a></li><li><a href="https://blog.csdn.net/baidu_38607919/article/details/102506792">一个好用的VScode预览html插件——Live Server Preview</a></li><li><a href="https://blog.csdn.net/BlizzardWu/article/details/124143767">JS定时器的4种写法及介绍</a></li><li><a href="https://zhuanlan.zhihu.com/p/269714623">【基础篇】做了这么久，才知道什么是上位机</a></li></ul>]]></content>
    
    
    <summary type="html">随手记录和康康一起交流学习的过程。</summary>
    
    
    
    <category term="方法教程" scheme="http://chen.cwxhmk.top/categories/%E6%96%B9%E6%B3%95%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="物联网" scheme="http://chen.cwxhmk.top/tags/%E7%89%A9%E8%81%94%E7%BD%91/"/>
    
    <category term="HTML" scheme="http://chen.cwxhmk.top/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>2023年度总结</title>
    <link href="http://chen.cwxhmk.top/2023/12/29/experience-2023/"/>
    <id>http://chen.cwxhmk.top/2023/12/29/experience-2023/</id>
    <published>2023-12-29T10:06:54.000Z</published>
    <updated>2025-02-02T03:29:13.165Z</updated>
    
    <content type="html"><![CDATA[<h1 id="小确幸"><a href="#小确幸" class="headerlink" title="小确幸"></a>小确幸</h1><h2 id="科研"><a href="#科研" class="headerlink" title="科研"></a>科研</h2><p>和去年的我相比，我最大的感触就是我开始去做一些事情了，我能渐渐抛开过去的成绩，正视自己存在的不足，耐心去学习、去积累。从一开始辅助课题组同事做数据分析，到后来争取到合作课题，再到现在慢慢有了自己的课题，很多事情在一开始我并不能看清未来的走向，但我还是选择坚定的走下去，我相信只有这样才能把路走远走宽。</p><p>我原本以为这五年我都不会碰生物实验，我相信或许我跨专业就不该碰生物实验，但我常常内心动摇，一方面是对我已有的能力能否支撑我顺利毕业信心不足，另一方面是希望可以自己做实验收集数据，不想一直依附于其他人。</p><p>我经常感觉很多事情困难，其实是因为它们一直停留在我的想象中，从未付诸实践。今年下半年我的做事态度转变很大，我开始敢于提出自己的数据分析思路，开始尝试稍微复杂一些的算法，开始学做生物实验，开始自己焊接线路搭建行为装置。我才发现我有能力做到这么多事情，我可以用数据分析结果影响课题的走向，我可以一个人完成小鼠脑立体定位手术，我可以搭建好硬件电路！</p><p>希望新的一年我可以进一步提升专业技能，努力做一个有价值的、值得信赖的人，也希望科研方面可以有新的突破，加油加油！我的2024一定很哇塞！🥳</p><h2 id="电影🎬"><a href="#电影🎬" class="headerlink" title="电影🎬"></a>电影🎬</h2><ul><li>航海王：红发歌姬</li><li>满江红</li><li>人生路不熟</li><li>变形金刚：超能勇士崛起</li><li>消失的她</li><li>八角笼中</li><li>长安三万里</li><li>流浪地球2</li><li>孤注一掷</li><li>无价之宝</li><li>刀尖</li><li>指环王</li><li>三大队</li></ul><h2 id="旅行"><a href="#旅行" class="headerlink" title="旅行"></a>旅行</h2><ul><li>聊城</li></ul><div class="fj-gallery"><p><img src="https://img.cwxhmk.top/gallary/2023-1-1.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-1-2.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-1-3.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-1-4.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-1-5.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-1-6.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-10-4.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-10-5.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-10-6.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-10-7.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-10-8.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-10-9.jpg"></p>          </div><ul><li>杭州</li><li><ul><li>浙大紫金港</li></ul></li></ul><div class="fj-gallery"><p><img src="https://img.cwxhmk.top/gallary/2023-3-1.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-3-3.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-3-4.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-3-5.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-3-6.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-4-4.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-4-5.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-4-6.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-4-7.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-5-4.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-6-7.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-7-1.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-9-4.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-11-1.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-11-2.jpg"></p>          </div><ul><li><ul><li>动物园和植物园</li></ul></li></ul><div class="fj-gallery"><p><img src="https://img.cwxhmk.top/gallary/2023-2-1.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-2-2.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-2-3.jpg"></p>          </div><ul><li><ul><li>湘湖</li></ul></li></ul><div class="fj-gallery"><p><img src="https://img.cwxhmk.top/gallary/2023-4-1.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-4-2.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-4-3.jpg"></p>          </div><ul><li><ul><li>西湖</li></ul></li></ul><div class="fj-gallery"><p><img src="https://img.cwxhmk.top/gallary/2023-9-1.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-9-2.jpg"></p>          </div><ul><li><ul><li>灵隐寺</li></ul></li></ul><div class="fj-gallery"><p><img src="https://img.cwxhmk.top/gallary/2023-10-10.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-10-11.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-10-12.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-10-13.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-10-14.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-10-15.jpg"></p>          </div><ul><li><ul><li>浙江升非物质文化遗产馆</li></ul></li></ul><div class="fj-gallery"><p><img src="https://img.cwxhmk.top/gallary/2023-11-6.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-11-7.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-11-8.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-11-9.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-11-10.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-11-11.jpg"></p>          </div><ul><li><ul><li>塘栖古镇</li></ul></li></ul><div class="fj-gallery"><p><img src="https://img.cwxhmk.top/gallary/2023-12-4.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-12-5.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-12-6.jpg"></p>          </div><ul><li><ul><li>闲逛</li></ul></li></ul><div class="fj-gallery"><p><img src="https://img.cwxhmk.top/gallary/2023-9-3.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-9-5.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-9-6.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-11-3.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-11-4.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-11-5.jpg"></p>          </div><ul><li>北京</li></ul><div class="fj-gallery"><p><img src="https://img.cwxhmk.top/gallary/2023-2-4.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-2-5.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-2-6.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-2-7.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-2-8.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-2-9.jpg"></p>          </div><ul><li>南京</li></ul><div class="fj-gallery"><p><img src="https://img.cwxhmk.top/gallary/2023-4-8.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-4-9.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-4-10.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-5-1.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-5-2.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-5-3.jpg"></p>          </div><ul><li>绍兴</li></ul><div class="fj-gallery"><p><img src="https://img.cwxhmk.top/gallary/2023-6-1.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-6-2.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-6-3.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-6-4.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-6-5.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-6-6.jpg"></p>          </div><ul><li>邢台</li></ul><div class="fj-gallery"><p><img src="https://img.cwxhmk.top/gallary/2023-8-8.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-8-1.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-8-2.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-8-3.jpg"></p>          </div><ul><li>西安</li></ul><div class="fj-gallery"><p><img src="https://img.cwxhmk.top/gallary/2023-10-1.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-10-2.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-10-3.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-10-16.jpg"></p>          </div><h2 id="鸟🐦"><a href="#鸟🐦" class="headerlink" title="鸟🐦"></a>鸟🐦</h2><div class="fj-gallery"><p><img src="https://img.cwxhmk.top/gallary/2023-bird-1.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-bird-2.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-bird-3.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-bird-4.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-bird-5.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-bird-6.jpg"></p>          </div><h2 id="喜事"><a href="#喜事" class="headerlink" title="喜事"></a>喜事</h2><ul><li>我的小侄子出生啦~</li><li>实验室三位同门都在今年结婚了，喜糖不断！🍬</li><li>康康要来杭州工作啦！</li></ul><h2 id="小技能"><a href="#小技能" class="headerlink" title="小技能"></a>小技能</h2><ul><li>催眠课上学到了一个小魔术🥰</li><li>做饭！</li></ul><div class="fj-gallery"><p><img src="https://img.cwxhmk.top/gallary/2023-5-6.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-8-4.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-8-5.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-8-6.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-12-2.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-12-3.jpg"></p>          </div><h2 id="讲座"><a href="#讲座" class="headerlink" title="讲座"></a>讲座</h2><div class="fj-gallery"><p><img src="https://img.cwxhmk.top/gallary/2023-5-5.jpg"><br><img src="https://img.cwxhmk.top/gallary/2023-12-1.jpg"></p>          </div><h1 id="经验"><a href="#经验" class="headerlink" title="经验"></a>经验</h1><ol><li>生活不是一成不变的，路是越走越宽的</li><li>不要一味地获取资源，对已有资源的消化和吸收更重要</li><li>在做重大决定之前要给自己想好后路，不要心血来潮</li><li>想学的东西很多不要怕，每次学多少也不用太过死板，重要的是持续去学习</li><li>从论文中摘录的观点或数据图，要注明文献出处，以免后续找不到哪一篇文献</li><li>代码要规范命名，写好注释及文档说明，及时同步到github</li><li>做事情要有逻辑，数据分析要紧紧围绕科研问题</li><li>我们并不仅仅是被动处于一个环境之中，我们也可以通过努力去影响和改变周围的环境</li><li>做事要善始善终，别人交代的事情要及时反馈</li><li>笔记中注明当天时间，便于复盘</li><li>对自己的能力有合理的评估，既要量力而行，又要适当突破舒适圈</li><li>要相信每次讨论都是有价值的，及时记录</li><li>文件多平台同步会极大提高工作效率</li><li>学到的知识及时整理，尽量可以用自己的话写出来，有机会的话还可以讲给别人，这样对知识的理解更深刻</li><li>要警惕一直做别人安排的事情，要有自己的思想，对自己做的事情有清晰的认知和规划，明确任务的优先级</li><li>事情并不会总按预期进行，要考虑全面，接受有可能发生的不好的结果</li><li>实践是最快速的学习方式</li><li>成绩不等于个人能力，要想证明自己就要拿出成果</li><li>过去偷懒绕开的困难也许在不久的将来又会变成拦路石，总是要面对的</li></ol>]]></content>
    
    
    <summary type="html">回顾我的2023</summary>
    
    
    
    <category term="生活随笔" scheme="http://chen.cwxhmk.top/categories/%E7%94%9F%E6%B4%BB%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="年度总结" scheme="http://chen.cwxhmk.top/tags/%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>【MATLAB App Designer使用教程】可拖拽的线</title>
    <link href="http://chen.cwxhmk.top/2023/12/29/matlab-app-designer-1/"/>
    <id>http://chen.cwxhmk.top/2023/12/29/matlab-app-designer-1/</id>
    <published>2023-12-29T08:19:50.000Z</published>
    <updated>2025-02-02T03:29:13.167Z</updated>
    
    <content type="html"><![CDATA[<h2 id="核心代码"><a href="#核心代码" class="headerlink" title="核心代码"></a>核心代码</h2><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">drag_line</span><span class="params">(app, fig, sel_line)</span></span></span><br><span class="line">    sel_line.ButtonDownFcn = @bdfcn;</span><br><span class="line">    opx = <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">bdfcn</span><span class="params">(~, edata)</span></span></span><br><span class="line">        opx = edata.IntersectionPoint(<span class="number">1</span>); <span class="comment">% 鼠标点击位置在坐标轴中的x坐标</span></span><br><span class="line">        sel_line.Selected = <span class="string">&#x27;on&#x27;</span>; <span class="comment">% 将拖动的线条设置为选中状态</span></span><br><span class="line">        app.UIFigure.WindowButtonMotionFcn = @wbmfcn; <span class="comment">% 鼠标在窗口内移动时</span></span><br><span class="line">        app.UIFigure.WindowButtonUpFcn = @wbufcn; <span class="comment">% 鼠标在窗口内弹起时</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">wbmfcn</span><span class="params">(~,~)</span></span></span><br><span class="line">        cp = fig.CurrentPoint; <span class="comment">% 当下鼠标所在的位置</span></span><br><span class="line">        dx = cp(<span class="number">1</span>,<span class="number">1</span>) - opx; <span class="comment">% 鼠标移动的差值</span></span><br><span class="line">        newXData = sel_line.XData + dx;</span><br><span class="line">        xLimits = fig.XLim;</span><br><span class="line">        <span class="comment">% 检查新的 XData 是否在范围内</span></span><br><span class="line">        <span class="keyword">if</span> all(newXData &gt;= xLimits(<span class="number">1</span>)) &amp;&amp; all(newXData &lt;= xLimits(<span class="number">2</span>))</span><br><span class="line">            sel_line.XData = newXData;</span><br><span class="line">            opx = cp(<span class="number">1</span>,<span class="number">1</span>); <span class="comment">% 更新 opx</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        app.LocationEditField.Value = sel_line.XData(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">wbufcn</span><span class="params">(~,~)</span></span></span><br><span class="line">        app.UIFigure.WindowButtonMotionFcn = <span class="string">&#x27;&#x27;</span>; <span class="comment">% 窗口内按键移动回调</span></span><br><span class="line">        app.UIFigure.WindowButtonUpFcn = <span class="string">&#x27;&#x27;</span>; <span class="comment">% 窗口内按键弹起回调</span></span><br><span class="line">        sel_line.Selected = <span class="string">&#x27;off&#x27;</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">% startupFcn</span></span><br><span class="line">arrayfun(@(ax) disableDefaultInteractivity(ax),[app.UIAxes]);</span><br><span class="line">xlim(app.UIAxes, [<span class="number">-10</span> <span class="number">10</span>]);</span><br><span class="line">drag_line(app, app.UIAxes, <span class="built_in">plot</span>(app.UIAxes, [<span class="number">0</span> <span class="number">0</span>], [<span class="number">0</span> <span class="number">1</span>], <span class="string">&#x27;LineWidth&#x27;</span>, <span class="number">2</span>));</span><br></pre></td></tr></table></figure><h2 id="运行效果"><a href="#运行效果" class="headerlink" title="运行效果"></a>运行效果</h2><p><img src="https://img.cwxhmk.top/gif/drag_line.gif" alt="文字"> </p>]]></content>
    
    
    <summary type="html">在MATLAB App Designer中实现可拖拽的直线。</summary>
    
    
    
    <category term="方法教程" scheme="http://chen.cwxhmk.top/categories/%E6%96%B9%E6%B3%95%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Matlab" scheme="http://chen.cwxhmk.top/tags/Matlab/"/>
    
  </entry>
  
  <entry>
    <title>【arduino探索】搭建触摸给水装置</title>
    <link href="http://chen.cwxhmk.top/2023/12/29/arduino-touch-pump/"/>
    <id>http://chen.cwxhmk.top/2023/12/29/arduino-touch-pump/</id>
    <published>2023-12-29T05:10:40.000Z</published>
    <updated>2025-02-02T03:29:13.165Z</updated>
    
    <content type="html"><![CDATA[<h1 id="实验材料准备"><a href="#实验材料准备" class="headerlink" title="实验材料准备"></a>实验材料准备</h1><ul><li><p>电容触摸传感器*1</p><img src="https://img.cwxhmk.top/post/touch-sensor.jpg" alt="触摸传感器" width="30%" height="30%" /> </li><li><p>蠕动泵*1</p></li><li><p>可孚一次性无菌加药器 50ml（粗针管）</p></li><li><p>杜邦线公对公</p></li><li><p>Arduino Uno R3*1</p></li><li><p>粗针头*2</p></li><li><p>绝缘胶带</p></li></ul><blockquote><p>电容触摸传感器和蠕动泵需要焊接杜邦线，用剪刀减去杜邦线一端的公头，用剥线钳暴露铜丝，短暂加热焊锡覆盖暴露的铜丝。</p></blockquote><h1 id="配件功能测试"><a href="#配件功能测试" class="headerlink" title="配件功能测试"></a>配件功能测试</h1><p>首先测试给水装置核心配件的功能是否正常。</p><h2 id="电容触摸传感器"><a href="#电容触摸传感器" class="headerlink" title="电容触摸传感器"></a>电容触摸传感器</h2><p>电容触摸传感器上标有VCC、GND和DAT引脚，VCC是电源引脚，用于给传感器供电；GND是接地引脚；DAT是数据引脚，用于传输触摸信号。经过Arduino程序测试，发现电容触摸传感器默认为高电平，触摸时为低电平。</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">pinMode</span>(A0, <span class="literal">INPUT</span>); <span class="comment">// 电容触摸传感器</span></span><br><span class="line">  <span class="built_in">pinMode</span>(<span class="number">2</span>, <span class="literal">OUTPUT</span>); <span class="comment">// LED</span></span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">begin</span>(<span class="number">9600</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="built_in">digitalRead</span>(A0));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用绝缘胶带缠绕触摸传感器引脚的杜邦线（起到保护和固定的作用），将粗针头固定到传感器较平整的一面，该装置即可作为小鼠的舔水口，小鼠通过针头舔水时，针头另一端会按压触摸传感器，因此可以根据触摸传感器电平的变化检测舔水事件。</p><p>为了更好地观察小鼠的舔水事件，我选用LED灯反映触摸传感器的状态，LED的正极连接arduino开发板的2号引脚。实现的效果为，小鼠舔水时（即按压触摸传感器）时，LED灯亮。</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">digitalRead</span>(A0) == <span class="literal">LOW</span>)&#123;</span><br><span class="line">    <span class="built_in">digitalWrite</span>(<span class="number">2</span>, <span class="literal">HIGH</span>);</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="built_in">digitalWrite</span>(<span class="number">2</span>, <span class="literal">LOW</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="蠕动泵"><a href="#蠕动泵" class="headerlink" title="蠕动泵"></a>蠕动泵</h2><p>上次买的蠕动泵有一个小配件被我弄坏了，这次测试新买的蠕动泵，通过转接头连接硅胶管，进水口放入粗针管内。给蠕动泵提供5V的电压，经测试，可以正常工作，出水口正常出水。<br>由于要控制训练过程中每个试次的给水量，因此对蠕动泵的出水量进行测试。经询问师弟，可以采用给水0.1s，间隔0.1s，并重复40次的方式测量，测量前称纸巾的重量，测量后再对纸巾称重，即可计算出每次给水的体积。连续两天测量蠕动泵的出水量，如果保持不变，即认为可正常工作。<br>$$m&#x3D;\rho V$$</p><p>$$\rho_{水} &#x3D;1g&#x2F;cm^3 $$</p><p>$$1cm^3&#x3D;1000\mu L$$</p><ul><li>12.29 测试结果：40次 给水0.1s 间隔0.1s 称重：0.05g</li></ul><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">pinMode</span>(A0, <span class="literal">INPUT</span>); <span class="comment">// 电容触摸传感器</span></span><br><span class="line">  <span class="built_in">pinMode</span>(<span class="number">2</span>, <span class="literal">OUTPUT</span>); <span class="comment">// 蠕动泵</span></span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">begin</span>(<span class="number">9600</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>); </span><br><span class="line">  <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= <span class="number">40</span>; i ++)&#123; <span class="comment">// 测出水量</span></span><br><span class="line">    <span class="built_in">digitalWrite</span>(<span class="number">2</span>, <span class="literal">HIGH</span>);</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">100</span>); <span class="comment">// ms</span></span><br><span class="line">    <span class="built_in">digitalWrite</span>(<span class="number">2</span>, <span class="literal">LOW</span>);</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">100</span>); <span class="comment">// ms</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="built_in">digitalRead</span>(A0));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="实验装置"><a href="#实验装置" class="headerlink" title="实验装置"></a>实验装置</h1><p><img src="https://img.cwxhmk.top/post/%E8%A7%A6%E6%91%B8%E7%BB%99%E6%B0%B4%E8%A3%85%E7%BD%AE%E5%AE%9E%E7%89%A9%E8%BF%9E%E7%BA%BF.jpg" alt="触摸给水装置实物连线"></p><h1 id="触摸给水"><a href="#触摸给水" class="headerlink" title="触摸给水"></a>触摸给水</h1><p>接下来测试触摸传感器控制蠕动泵给水的功能，经测试，功能正常。</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">pinMode</span>(A0, <span class="literal">INPUT</span>); <span class="comment">// 电容触摸传感器</span></span><br><span class="line">  <span class="built_in">pinMode</span>(<span class="number">2</span>, <span class="literal">OUTPUT</span>); <span class="comment">// 蠕动泵</span></span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">begin</span>(<span class="number">9600</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">Serial</span>.<span class="built_in">println</span>(<span class="built_in">digitalRead</span>(A0));</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">digitalRead</span>(A0) == <span class="literal">LOW</span>)&#123; <span class="comment">// 测试触摸给水</span></span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">2</span>, <span class="literal">HIGH</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">100</span>); <span class="comment">// ms</span></span><br><span class="line">  <span class="built_in">digitalWrite</span>(<span class="number">2</span>, <span class="literal">LOW</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="经验"><a href="#经验" class="headerlink" title="经验"></a>经验</h1><ol><li>小鼠训练过程中每天摄入水量为1ml~1.2ml</li><li>测试时针管内的气泡一定要排干净，且传感器的放置方式与实际任务期间保持一致</li></ol>]]></content>
    
    
    <summary type="html">训练小鼠做任务很重要的一环是正向强化，通过给水奖励强化小鼠的正确行为。</summary>
    
    
    
    <category term="方法教程" scheme="http://chen.cwxhmk.top/categories/%E6%96%B9%E6%B3%95%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="arduino" scheme="http://chen.cwxhmk.top/tags/arduino/"/>
    
  </entry>
  
  <entry>
    <title>【arduino探索】使用ArControl编写“炸弹💣游戏”</title>
    <link href="http://chen.cwxhmk.top/2023/12/26/arcontrol-boom-game/"/>
    <id>http://chen.cwxhmk.top/2023/12/26/arcontrol-boom-game/</id>
    <published>2023-12-26T05:38:56.000Z</published>
    <updated>2025-02-02T03:29:13.165Z</updated>
    
    <content type="html"><![CDATA[<div class="note info flat"><p>游戏规则：<br>简易版：游戏有一个5秒倒计时炸弹，时间到了就会爆炸，马里奥玩家就会死亡。如果玩家可以在这5s内按下停止开关，炸弹不会爆炸，玩家马里奥任务成功。</p><p>实验材料：<br>Arduino UNO R3 * 1<br>面包板 * 1<br>发光二极管 * 1（模拟炸弹）<br>按钮 * 1（模拟开关）</p></div><h1 id="Arduino引脚映射"><a href="#Arduino引脚映射" class="headerlink" title="Arduino引脚映射"></a>Arduino引脚映射</h1><p>ArControl对Arduino UNO开发板做了端口映射，定义好了6个输入端口和8个输出端口，示意图如下。IN和OUT都是相对于Arduino开发板来说的。在这个小游戏中，我们使用<code>pinA0</code>即<code>IN1</code>接收按钮的状态，<code>pin2</code>即<code>OUT1</code>控制LED灯的状态。</p><p><img src="https://img.cwxhmk.top/post/Arduino_UNO_Pin.png" alt="Arduino引脚映射"></p><h1 id="Arduino测试程序"><a href="#Arduino测试程序" class="headerlink" title="Arduino测试程序"></a>Arduino测试程序</h1><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//测试按钮控制led灯是否正常</span></span><br><span class="line"><span class="type">int</span> ledPin = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">pinMode</span>(A0, <span class="literal">INPUT</span>);</span><br><span class="line">  <span class="built_in">pinMode</span>(ledPin, <span class="literal">OUTPUT</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">digitalRead</span>(A0) == <span class="literal">HIGH</span>)&#123;</span><br><span class="line">    <span class="built_in">digitalWrite</span>(ledPin, <span class="literal">HIGH</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="built_in">digitalWrite</span>(ledPin, <span class="literal">LOW</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Arduino实物连接图"><a href="#Arduino实物连接图" class="headerlink" title="Arduino实物连接图"></a>Arduino实物连接图</h1><div class="note warning flat"><p>关于接线我还闹了个笑话，我在ArControl上进行测试，发现按下按钮之后，<code>IN1</code>端口会持续很久的高电平，而且不按按钮时也会有通道闪烁的情况。我在arduino IDE中测试按钮控制LED灯的情况，发现了类似的问题，当我不按按钮时，LED灯也是亮的，按下按钮之后，LED灯只是变得更亮了。我检查线路并没发现什么问题，去请教师兄，才发现我接线时按钮旁边的下拉电阻没接上！！！😅按我那样的接法，电阻纯属摆设，跟按钮的电路半毛钱关系都没有。重新接好电阻之后，再测试就正常了。(＾－＾)V</p></div><p><img src="https://img.cwxhmk.top/post/arduino-boom%E5%AE%9E%E7%89%A9%E6%8E%A5%E7%BA%BF%E5%9B%BE.jpg" alt="实物连接图"></p><h1 id="ArControl使用流程"><a href="#ArControl使用流程" class="headerlink" title="ArControl使用流程"></a>ArControl使用流程</h1><p>ArControl的软件部分主要包括两个应用程序，其中ArControl Designer用于编写行为范式的protocol，ArControl Recorder用于监控端口的运行状态并采集实验数据。</p><h2 id="ArControl-Designer"><a href="#ArControl-Designer" class="headerlink" title="ArControl Designer"></a>ArControl Designer</h2><p>ArControl Designer借鉴了状态机的原理，把行为实验流程等效分解为一系列时序上相互衔接的子任务（State），可以根据实验逻辑在状态之间进行跳转。</p><p>每一个State可以对6种功能进行配置，包括改变任务变量（do-var）、控制输出通道（do-pin）、 检测任务变量（when-var）、检测实验计数（when-count）、检测等待时间 （when-time）以及检测输入端口（when-pin）。其中每个功能的详细配置是在子窗体中进行的。</p><p>在这个小游戏中，逻辑比较简单，可以分为倒计时、炸弹爆炸和炸弹不爆炸三个状态，分别记为<code>S1</code>、<code>S2</code>和<code>S3</code>。如果在没有在5s内按下停止开关，则跳转到<code>S2</code>；如果在5s内按下停止开关，则跳转到<code>S3</code>。编写完实验流程之后，保存。</p><p><img src="https://img.cwxhmk.top/post/arcontrol-designer.jpg" alt="ArControl Designer"><br>如果想查看实验流程图，也可以点击File→Export pdf，这个功能真的很方便检查实验逻辑！<br><img src="https://img.cwxhmk.top/post/arduino-boom-procedure.jpg" alt="流程图"></p><h2 id="ArControl-Recorder"><a href="#ArControl-Recorder" class="headerlink" title="ArControl Recorder"></a>ArControl Recorder</h2><p>选择Arduino开发板对应的端口，载入实验流程并烧录进开发板。点击<code>Start</code>按钮即可运行，点击<code>Stop</code>按钮即可手动终止程序，也可以等程序运行完自动结束。中间的板块可以实时观察输入&#x2F;输出端口的电平变化，如果为绿色，则表示当前端口是高电平。下图分别为炸弹💣爆炸💥和成功按下停止开关时的端口状态。</p><p><img src="https://img.cwxhmk.top/post/arcontrol-boom-1.jpg" alt="Boom"><br><img src="https://img.cwxhmk.top/post/arcontrol-boom-2.jpg" alt="No boom"></p><h1 id="参考内容"><a href="#参考内容" class="headerlink" title="参考内容"></a>参考内容</h1><ul><li><a href="https://www.bilibili.com/video/BV13v411v7TN/">[Arduino] 2_状态机可视化编程_ArControl工具_实例”炸弹游戏”</a></li><li><a href="https://github.com/chenxinfeng4/ArControl">Github ArControl</a></li></ul>]]></content>
    
    
    <summary type="html">使用实验室已毕业师兄开发的ArControl编写“炸弹游戏”</summary>
    
    
    
    <category term="方法教程" scheme="http://chen.cwxhmk.top/categories/%E6%96%B9%E6%B3%95%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="arduino" scheme="http://chen.cwxhmk.top/tags/arduino/"/>
    
    <category term="ArControl" scheme="http://chen.cwxhmk.top/tags/ArControl/"/>
    
  </entry>
  
  <entry>
    <title>【arduino探索】控制蠕动泵出水</title>
    <link href="http://chen.cwxhmk.top/2023/12/26/arduino-pump/"/>
    <id>http://chen.cwxhmk.top/2023/12/26/arduino-pump/</id>
    <published>2023-12-26T02:38:53.000Z</published>
    <updated>2025-02-02T03:29:13.165Z</updated>
    
    <content type="html"><![CDATA[<p>前几天在淘宝上买的蠕动泵终于到货了，早上拆开快递一脸懵，摆在我面前两个难题：第一，我该怎么给这个蠕动泵供电呢？虽然顶部标有正负极，但我还是不知道该怎么办；第二，蠕动泵自带了管子，比较短，我怎么换成我们实验室自己的硅胶管呢？</p><p>对于第一个问题，我请教了师弟。拿剪刀将杜邦线剪去一头，然后用剥线钳暴露电线，将电线穿过蠕动泵顶部的孔，折叠后焊锡，另一个孔也同样操作即可。接好线后我在arduino板上测试了一下，一端接入5V电压，另一端接地，测试发现可以正常工作！</p><p>对于第二个问题，我的第一反应是把自带的管抽出来，换成我们实验室自己的硅胶管。但我抽出来才发现，泵头的孔太小，硅胶管穿不进去。后来尝试把管口剪尖，终于穿进去了，结果泵头的一个小组件崩飞了，┭┮﹏┭┮。后来师弟和师姐意外发现快递里面的转接头（我早就看到了，但不知道是干啥用的），告诉我说这个可以直接接到自带的管上，然后另一端连自己的硅胶管，我才恍然大悟！</p><img src="https://img.cwxhmk.top/post/%E8%BD%AC%E6%8E%A5%E5%A4%B4.jpg" alt="图片说明" width="50%" height="50%" /> <p>虽然小零件崩飞了，但我还是完整地测试了一下蠕动泵的功能（用led blink的程序测试的），一端接<code>pin12</code>，一端接地，arduino写入程序后蠕动泵可以实现间隔1s给水。静待我买的新蠕动泵！<br><img src="https://img.cwxhmk.top/post/%E8%A0%95%E5%8A%A8%E6%B3%B5%E6%8E%A5%E7%BA%BF%E5%AE%9E%E7%89%A9.jpg" alt="蠕动泵实物连线"></p>]]></content>
    
    
    <summary type="html">使用arduino uno r3开发板控制蠕动泵出水</summary>
    
    
    
    <category term="方法教程" scheme="http://chen.cwxhmk.top/categories/%E6%96%B9%E6%B3%95%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="arduino" scheme="http://chen.cwxhmk.top/tags/arduino/"/>
    
  </entry>
  
  <entry>
    <title>【arduino探索】按键控制LED灯</title>
    <link href="http://chen.cwxhmk.top/2023/12/25/arduino-button-led-demo/"/>
    <id>http://chen.cwxhmk.top/2023/12/25/arduino-button-led-demo/</id>
    <published>2023-12-25T07:55:45.000Z</published>
    <updated>2025-02-02T03:29:13.165Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Arudino-Uno-R3开发板简介"><a href="#Arudino-Uno-R3开发板简介" class="headerlink" title="Arudino Uno R3开发板简介"></a>Arudino Uno R3开发板简介</h1><p><img src="https://img.cwxhmk.top/post/arduino-uno-description.jpg" alt="Arudino Uno R3开发板引脚说明"> </p><h1 id="电路图"><a href="#电路图" class="headerlink" title="电路图"></a>电路图</h1><div class="note info flat"><p>目标：使用四角按键开关控制LED灯，当按钮按下时灯亮，松开时灯灭。</p><p>实现思路：将引脚2改为<code>input mode</code>，反映按键的状态。引脚12为<code>output mode</code>，控制led灯的亮灭。当按键按下时，引脚2为高电平，此时led灯亮；当按钮松开时，引脚2为低电平，此时led灯灭。（对应仿真图连线）</p><p>如果引脚2的状态为<code>input pullup mode</code>（如果外部组件未启用，上拉电阻将输入端口处的电压拉到高电平），当按键按下时，引脚2为低电平，此时led灯亮；当按钮松开时，引脚2为高电平，此时led灯灭。（对应实物连线）</p><p>注意事项：四角按键同侧不相连，相连不同侧。</p></div><p><img src="https://img.cwxhmk.top/post/button-led%E4%BB%BF%E7%9C%9F%E5%9B%BE.jpg" alt="仿真"><br><img src="https://img.cwxhmk.top/post/button-led%E5%AE%9E%E7%89%A9%E5%9B%BE.jpg" alt="实物"> </p><h1 id="Arduino程序"><a href="#Arduino程序" class="headerlink" title="Arduino程序"></a>Arduino程序</h1><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> buttonPin = <span class="number">2</span>;</span><br><span class="line"><span class="type">int</span> ledPin = <span class="number">12</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// put your setup code here, to run once:</span></span><br><span class="line">  <span class="built_in">pinMode</span>(buttonPin, <span class="literal">INPUT_PULLUP</span>);</span><br><span class="line">  <span class="built_in">pinMode</span>(ledPin, <span class="literal">OUTPUT</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// put your main code here, to run repeatedly:</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">digitalRead</span>(buttonPin) == <span class="literal">LOW</span>)&#123;</span><br><span class="line">    <span class="built_in">digitalWrite</span>(ledPin, <span class="literal">HIGH</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="built_in">digitalWrite</span>(ledPin, <span class="literal">LOW</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><ul><li><a href="https://blog.csdn.net/TonyIOT/article/details/81414118">Arduino基础入门篇07—按键控制LED灯</a></li><li><a href="https://www.tinkercad.com/">Arduino在线仿真平台</a></li><li><a href="https://www.bilibili.com/video/BV164411J7GE/">【太极创客】零基础入门学用Arduino 第一部分 合辑</a></li></ul>]]></content>
    
    
    <summary type="html">使用arduino uno r3开发板实现按键控制LED灯</summary>
    
    
    
    <category term="方法教程" scheme="http://chen.cwxhmk.top/categories/%E6%96%B9%E6%B3%95%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="arduino" scheme="http://chen.cwxhmk.top/tags/arduino/"/>
    
  </entry>
  
  <entry>
    <title>在Mac电脑上安装VMware Fusion</title>
    <link href="http://chen.cwxhmk.top/2023/12/23/mac-vmware-fusion/"/>
    <id>http://chen.cwxhmk.top/2023/12/23/mac-vmware-fusion/</id>
    <published>2023-12-23T03:52:52.000Z</published>
    <updated>2025-02-02T03:29:13.167Z</updated>
    
    <content type="html"><![CDATA[<p>大学毕业以后买了一台新的联想电脑，当时还因为终于可以用GPU而兴奋了很久，后来去北京出差背着电脑来回走了很久，不插着电源很快就会没电。从北京回来我就斥巨资买了一台苹果电脑，续航能力没得说，平时用的大部分软件也都是有mac版的。因为工位空间有限，我就把苹果电脑放在了工位，联想电脑留在了宿舍，平时偶尔会远程控制一下宿舍的电脑，但有时会很卡，操作也不太方便。</p><p>之前有想过安装mac双系统，但又怕对电脑不好，就一直将就着使用了。最近有一些软件只能在windows系统上运行，狠了狠心，在mac上安了个虚拟机（<a href="https://www.vmware.com/products/fusion/fusion-evaluation.html">VMware Fusion 13</a>），可以比较方便地使用windows系统。（存储空间一下子少了很多，┻┳|･ω･|）</p><p>VMware Fusion有个人免费版，但我实在是注册不上这个网站，曲线救国选择下载Fusion 13 Pro，然后输入网上找到的序列号（<mark class="hl-label green">5N400-4AH82-M88Q3-0LC0P-0TRL0</mark> ），就可以正常使用了。</p><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><ol><li>可以直接通过Microsoft安装win11</li><li>新建虚拟磁盘</li><li>记住密码并存储在mac钥匙串中</li><li>安装VMware Tools之后全屏可以铺满且有原始mac电脑的分辨率（以管理员身份运行windows powershell→输入Set-ExecutionPolicy RemoteSigned→A→菜单栏选择虚拟机→安装VMware Tools）</li><li>我安装的时候没有遇到网上教程所说的网络问题</li></ol><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><ul><li><a href="https://blog.csdn.net/weixin_52799373/article/details/129658881">M1&#x2F;M2 Pro VMware Fusion虚拟机安装Win11教程(超详细)</a></li><li><a href="https://www.bilibili.com/read/cv19980721/">支持M芯片的免费虚拟机软件来了！VMware Fusion 13安装教程</a></li><li><a href="https://zhuanlan.zhihu.com/p/452412091">在Apple芯片的Mac上通过VMware Fusion 13使用Windows 11</a></li></ul>]]></content>
    
    
    <summary type="html">mac电脑的尽头是windows？</summary>
    
    
    
    <category term="方法教程" scheme="http://chen.cwxhmk.top/categories/%E6%96%B9%E6%B3%95%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="虚拟机" scheme="http://chen.cwxhmk.top/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>VSCode无法正常打开.ipynb文件</title>
    <link href="http://chen.cwxhmk.top/2023/12/23/vscode-ipynb-error/"/>
    <id>http://chen.cwxhmk.top/2023/12/23/vscode-ipynb-error/</id>
    <published>2023-12-23T02:38:03.000Z</published>
    <updated>2025-02-02T03:29:13.168Z</updated>
    
    <content type="html"><![CDATA[<p>上午原本想写程序，打开VSCode之后发现不能打开.ipynb文件了，报错信息如下：</p><div class="note danger flat"><p>Error loading webview: Error: Could not register service worker: InvalidStateError: Failed to register a ServiceWorker: The document is in an invalid state..</p><p>The editor could not be opened due to an unexpected error: Could not initialize webview: Error: Could not register service worker: InvalidStateError: Failed to register a ServiceWorker: The document is in an invalid state..</p></div><p>在网上查了一些解决方法，尝试过删除vscode缓存（~&#x2F;Library&#x2F;Application Support&#x2F;Code&#x2F;）、重新安装插件和重启VSCode，但都不起作用。经过不懈努力，终于在<a href="https://stackoverflow.com/questions/67698176/error-loading-webview-error-could-not-register-service-workers-typeerror-fai">stack overflow</a>上找到了适合我的解决方案，删除Service Worker文件夹之后重启VSCode，.ipynb文件就可以正常显示了！</p><div class="note success flat"><p>There is another possible reason for OSX, that the files in the following paths are restricted by user permissions.</p><p>MAC: ~&#x2F;Library&#x2F;Application Support&#x2F;Code&#x2F;Service Worker</p><p>You can directly delete folders with restricted permissions.</p><p>After restarting VScode, he will generate it again.</p></div>]]></content>
    
    
    <summary type="html">记录VSCode无法正常显示.ipynb文件的问题。</summary>
    
    
    
    <category term="方法教程" scheme="http://chen.cwxhmk.top/categories/%E6%96%B9%E6%B3%95%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Jupyter Notebook" scheme="http://chen.cwxhmk.top/tags/Jupyter-Notebook/"/>
    
    <category term="VSCode" scheme="http://chen.cwxhmk.top/tags/VSCode/"/>
    
  </entry>
  
  <entry>
    <title>ImageJ插件开发</title>
    <link href="http://chen.cwxhmk.top/2023/07/21/imagej-plugin-9/"/>
    <id>http://chen.cwxhmk.top/2023/07/21/imagej-plugin-9/</id>
    <published>2023-07-21T12:33:25.000Z</published>
    <updated>2025-02-02T03:29:13.166Z</updated>
    
    <content type="html"><![CDATA[<h1 id="开发流程"><a href="#开发流程" class="headerlink" title="开发流程"></a>开发流程</h1><ol><li>安装Java8 JDK (Windows x86 64-bit) ​<a href="https://docs.azul.com/core/zulu-openjdk/install/windows">https://docs.azul.com/core/zulu-openjdk/install/windows</a></li><li>安装Eclipse IDE for Java Developers ​<a href="https://www.eclipse.org/downloads/">https://www.eclipse.org/downloads/</a></li><li>在github下载示例插件并修改 ​GitHub - imagej&#x2F;example-imagej2-command: Simple Maven project for an ImageJ2 command</li></ol><ul><li>修改pom.xml：重点修改groupId、artifactId、version、name、<properties>的内容</li><li>Eclipse-Import-Maven-Existing Maven Projects</li><li>重命名：项目名、包名、java文件中类名和菜单路径</li></ul><ol start="4"><li>Run as Java application 确保程序可以正常运行</li><li>Run as Maven build 控制台输出<mark class="hl-label green">BUILD</mark> <mark class="hl-label green">SUCCESS</mark> 则表示程序成功打包为jar包（保存在target目录下）</li><li>将jar包粘贴至Fiji的plugin目录，运行软件测试插件效果</li></ol><h1 id="问题记录"><a href="#问题记录" class="headerlink" title="问题记录"></a>问题记录</h1><ol><li>如果pom.xml中<parent>报错，则尝试修改<version>，并等待右下角更新完成</li><li>打包好的插件在ImageJ中无法正常运行，报错<code>java.lang.ClassCastException: com.chen.brain.pluginMain cannot be cast to org.scijava.plugin.SciJavaPlugin</code><br><strong>报错原因：</strong>pluginMain类没有实现org.scijava.command.Command接口，而这是必须的，才能将其识别为有效的SciJava插件。@Plugin注解用于指定该类应注册为一个命令插件，但由于它没有实现所需的接口，因此会导致ClassCastException异常。<br><strong>解决方案：</strong><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.scijava.command.Command;</span><br><span class="line"><span class="keyword">import</span> org.scijava.plugin.Plugin;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Plugin(type = Command.class, menuPath = &quot;Plugins&gt;brainRegistration&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">pluginMain</span> <span class="keyword">implements</span> <span class="title class_">Command</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 省略其他部分</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 在这里实现插件的逻辑</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">pluginMain</span>().location();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>在Eclipse中初次导入项目时，要等待build（可能需要等待几分钟）</li><li>最好在官方提供的模板基础上写自己的代码，而不是用自己新建的maven项目</li></ol><h1 id="参考内容"><a href="#参考内容" class="headerlink" title="参考内容"></a>参考内容</h1><ul><li><a href="https://imagej.net/develop/eclipse">参考文档</a></li><li><a href="%E2%80%8Bhttps://www.youtube.com/watch?v=YIWpoBnnLio">参考视频</a></li></ul>]]></content>
    
    
    <summary type="html">之前明明走过开发插件的流程，没想到把自己写的代码打包的时候遇到各种问题，服了！！！</summary>
    
    
    
    <category term="项目实战" scheme="http://chen.cwxhmk.top/categories/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/"/>
    
    
    <category term="ImageJ" scheme="http://chen.cwxhmk.top/tags/ImageJ/"/>
    
    <category term="Java" scheme="http://chen.cwxhmk.top/tags/Java/"/>
    
    <category term="Eclipse" scheme="http://chen.cwxhmk.top/tags/Eclipse/"/>
    
  </entry>
  
  <entry>
    <title>neurogym学习笔记【01】</title>
    <link href="http://chen.cwxhmk.top/2023/07/17/neurogym/"/>
    <id>http://chen.cwxhmk.top/2023/07/17/neurogym/</id>
    <published>2023-07-17T13:06:52.000Z</published>
    <updated>2025-02-02T03:29:13.167Z</updated>
    
    <content type="html"><![CDATA[<div class="note info flat"><p>NeuroGym是一个经过仔细挑选的神经科学任务集合，具有公共接口。其目标是促进在神经科学任务上神经网络模型的训练。</p><p>NeuroGym是一个工具包，可以让您在许多已建立的神经科学任务技术上训练任何神经网络模型，如标准的监督学习或强化学习。</p><p>该教程用于理解Neurogym的任务结构，程序运行环境为Google Colab。本文翻译自Neurogym官方文档，对应的代码 <a href="https://colab.research.google.com/drive/1ays7_LTBsLAM9O29Z0z0ozCZdvDWy3-R?usp=sharing">[Open in Colab]</a></p><p>neurogym是基于gym开发的，很多参数的设置用起来不是很顺手，不清楚源代码怎么写的，有些代码不太好理解。但本质上就是继承了gym的一些方法，生成行为任务的数据。后面可能不会直接用neurogym，而是仿写并实现课题组内已有的范式。</p></div><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">! pip install gym</span><br><span class="line">! git clone https://github.com/gyyang/neurogym.git</span><br><span class="line">%cd neurogym</span><br><span class="line">! pip install -e .</span><br></pre></td></tr></table></figure><h1 id="OpenAI-gym-任务"><a href="#OpenAI-gym-任务" class="headerlink" title="OpenAI gym 任务"></a>OpenAI gym 任务</h1><p>Neurogym任务遵循基本的OpenAI gym任务形式。每个任务定义为一个Python类，继承自<code>gym.Env</code>类。</p><p>在这一节中，我们描述一个OpenAI gym任务的基本结构。</p><p>在<code>__init__</code>方法中，必须定义两个属性，<code>self.observation_space</code>和<code>self.action_space</code>，它们描述了观测（网络输入）和动作（网络输出）的空间类型。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> warnings</span><br><span class="line">warnings.filterwarnings(<span class="string">&quot;ignore&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> gym</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyEnv</span>(gym.Env):</span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">    <span class="built_in">super</span>().__init__()</span><br><span class="line">    self.observation_space = gym.spaces.Box(low=<span class="number">0.</span>, high=<span class="number">1.</span>, shape=(<span class="number">2</span>,))</span><br><span class="line">    self.action_space = gym.spaces.Discrete(<span class="number">3</span>)</span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">step</span>(<span class="params">self, action</span>):</span><br><span class="line">    ob = self.observation_space.sample()</span><br><span class="line">    reward = <span class="number">1.</span></span><br><span class="line">    done = <span class="literal">False</span></span><br><span class="line">    info = &#123;&#125;</span><br><span class="line">    <span class="keyword">return</span> ob, reward, done, info</span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">reset</span>(<span class="params">self</span>):</span><br><span class="line">    ob = self.observation_space.sample()</span><br><span class="line">    <span class="keyword">return</span> ob </span><br><span class="line">env = MyEnv()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;sample random observation value&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(env.observation_space.sample())</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;sample random action value&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(env.action_space.sample())</span><br><span class="line"><span class="comment"># 输出：</span></span><br><span class="line"><span class="comment"># sample random observation value</span></span><br><span class="line"><span class="comment"># [0.23197113 0.8055692 ]</span></span><br><span class="line"><span class="comment"># sample random action value</span></span><br><span class="line"><span class="comment"># 0</span></span><br></pre></td></tr></table></figure><p>另一个需要定义的关键方法是<code>step</code>方法，用于接收智能体的动作后更新环境、输出观测和奖励。</p><p><code>step</code>方法将<code>action</code>作为输入，并输出智能体的下一个观测<code>observation</code>，智能体获得的标量奖励<code>reward</code>，用于描述环境是否需要重置的布尔值<code>done</code>，以及包含任何额外信息的字典<code>info</code>。</p><p>如果环境通过内部状态描述，<code>reset</code>方法需要重置这些内部状态。该方法返回一个初始观测<code>observation</code>。</p><p>下面我们定义一个简单的任务，智能体沿着一维直线采取动作。奖励由智能体在直线上的位置决定。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_reward</span>(<span class="params">x</span>):</span><br><span class="line">  <span class="keyword">return</span> np.sin(x) * np.exp(-np.<span class="built_in">abs</span>(x)/<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">xs = np.linspace(-<span class="number">10</span>, <span class="number">10</span>, <span class="number">100</span>)</span><br><span class="line">plt.plot(xs, get_reward(xs))</span><br><span class="line">plt.xlabel(<span class="string">&#x27;State value(observation)&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;Reward&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://img.cwxhmk.top/post/20230719-1.png" alt="运行结果"><br>智能体可以与环节迭代地互动，红色星星表示智能体的初始状态。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyEnv</span>(gym.Env):</span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">    <span class="built_in">super</span>().__init__()</span><br><span class="line">    self.observation_space = gym.spaces.Box(-<span class="number">10</span>,<span class="number">10</span>,(<span class="number">1</span>,))</span><br><span class="line">    self.action_space = gym.spaces.Discrete(<span class="number">3</span>) <span class="comment"># 0,1,2</span></span><br><span class="line">    self.state = <span class="number">0.</span></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">step</span>(<span class="params">self,action</span>):</span><br><span class="line">    self.state += (action - <span class="number">1.</span>) * <span class="number">0.1</span> <span class="comment"># action 0 1 2 对应状态 -0.1 0 0.1</span></span><br><span class="line">    self.state = np.clip(self.state, -<span class="number">10</span>, <span class="number">10</span>) <span class="comment"># 限制取值范围</span></span><br><span class="line">    ob = self.state</span><br><span class="line">    reward = get_reward(self.state)</span><br><span class="line">    done = <span class="literal">False</span></span><br><span class="line">    info = &#123;&#125;</span><br><span class="line">    <span class="keyword">return</span> ob, reward, done, info</span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">reset</span>(<span class="params">self</span>):</span><br><span class="line">    <span class="comment"># 重新初始化状态</span></span><br><span class="line">    self.state = self.observation_space.sample()</span><br><span class="line">    <span class="keyword">return</span> self.state</span><br><span class="line">env = MyEnv()</span><br><span class="line">ob = env.reset()  </span><br><span class="line">ob_log = <span class="built_in">list</span>() </span><br><span class="line">reward_log = <span class="built_in">list</span>()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1000</span>):</span><br><span class="line">  action = env.action_space.sample()</span><br><span class="line">  ob, reward, done, info = env.step(action)</span><br><span class="line">  ob_log.append(ob)</span><br><span class="line">  reward_log.append(reward)</span><br><span class="line">plt.plot(ob_log, reward_log)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;State value(observation)&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;Reward&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://img.cwxhmk.top/post/20230719-2.png" alt="运行结果"></p><h1 id="基于试次（trial）的Neurogym任务"><a href="#基于试次（trial）的Neurogym任务" class="headerlink" title="基于试次（trial）的Neurogym任务"></a>基于试次（trial）的Neurogym任务</h1><p>许多神经科学和认知科学的任务有试次结构。<code>neurogym.TrialEnv</code>为常见的基于试次任务提供了类。它与<code>gym.Env</code>的主要不同在于<code>_new_trial()</code>方法，该方法可以生成新试次的摘要信息，并且可选择地，生成观测和真实值输出。除此之外，用户提供了<code>_step()</code>方法而不是<code>step()</code>方法。</p><p><code>_new_trial()</code>方法接收任意键-值参数<code>**kwargs</code>，输出一个包含该试次相关信息的字典<code>trial</code>。这个字典在<code>_step</code>中可以作为<code>self.trial</code>访问。</p><p>这里我们定义一个简单的任务，智能体在每个试次需要基于它的观测做出一个二元决策。每个试次只有一个时间步。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> neurogym <span class="keyword">as</span> ngym</span><br><span class="line"><span class="keyword">from</span> neurogym <span class="keyword">import</span> TrialEnv</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyTrialEnv</span>(<span class="title class_ inherited__">TrialEnv</span>):</span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">    <span class="built_in">super</span>().__init__()</span><br><span class="line">    self.observation_space = gym.spaces.Box(-<span class="number">1.</span>, <span class="number">1.</span>, (<span class="number">1</span>,))</span><br><span class="line">    self.action_space = gym.spaces.Discrete(<span class="number">2</span>) <span class="comment"># 0 1</span></span><br><span class="line">    self.next_ob = np.random.uniform(-<span class="number">1</span>, <span class="number">1</span>, size=(<span class="number">1</span>,)) <span class="comment"># 用于生成[-1，1）范围内均分分布的随机数</span></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">_new_trial</span>(<span class="params">self</span>): <span class="comment"># 实现父类TrialEnv中的_new_trial和_step方法</span></span><br><span class="line">    ob = self.next_ob</span><br><span class="line">    self.next_ob = np.random.uniform(-<span class="number">1</span>, <span class="number">1</span>, size=(<span class="number">1</span>,))</span><br><span class="line">    trial = <span class="built_in">dict</span>()</span><br><span class="line">    trial[<span class="string">&#x27;ground_truth&#x27;</span>] = (ob &gt; <span class="number">0</span>) * <span class="number">1.0</span></span><br><span class="line">    <span class="keyword">return</span> trial</span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">_step</span>(<span class="params">self, action</span>):</span><br><span class="line">    ob = self.next_ob</span><br><span class="line">    reward = (action == self.trial[<span class="string">&#x27;ground_truth&#x27;</span>]) * <span class="number">1.0</span></span><br><span class="line">    </span><br><span class="line">    done = <span class="literal">False</span></span><br><span class="line">    info = &#123;<span class="string">&#x27;new_trial&#x27;</span>: <span class="literal">True</span>&#125;</span><br><span class="line">    <span class="keyword">return</span> ob, reward, done, info</span><br><span class="line"></span><br><span class="line">env = MyTrialEnv()</span><br><span class="line">ob = env.reset()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Trial&#x27;</span>, <span class="number">0</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Observation&#x27;</span>, ob)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">  action = env.action_space.sample()</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&#x27;Action&#x27;</span>, action)</span><br><span class="line">  ob, reward, done, info = env.step(action)</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&#x27;Reward&#x27;</span>, reward)</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&#x27;Trial&#x27;</span>, i+<span class="number">1</span>)</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&#x27;Observation&#x27;</span>, ob)</span><br><span class="line">  Trial <span class="number">0</span></span><br><span class="line"><span class="comment"># 输出：</span></span><br><span class="line"><span class="comment"># Observation [0.37521716]</span></span><br><span class="line"><span class="comment"># Action 1</span></span><br><span class="line"><span class="comment"># Reward [1.]</span></span><br><span class="line"><span class="comment"># Trial 1</span></span><br><span class="line"><span class="comment"># Observation [0.88569181]</span></span><br><span class="line"><span class="comment"># Action 1</span></span><br><span class="line"><span class="comment"># Reward [1.] ···</span></span><br></pre></td></tr></table></figure><p><code>TrialEnv</code>类定义了两个抽象方法：<code>_new_trial()</code>和<code>_step()</code>。这两个方法没有具体的实现，只有方法的声明和文档字符串。这样做的目的是强制任何继承<code>TrialEnv</code>的子类必须实现这两个方法，以便成为一个完整的环境。</p><p>环境<code>reset</code>时会调用<code>new_trial()</code>方法，<code>step</code>之后也会调用<code>new_trial()</code>方法，只不过这些是在父类中实现的，我们创建环境时只需要把<code>_new_trial()</code>方法实现即可。</p><p>具体可见neurogym目录下的<code>core.py</code>文件。</p><h1 id="在基于试次的任务中包含时间，阶段和观测"><a href="#在基于试次的任务中包含时间，阶段和观测" class="headerlink" title="在基于试次的任务中包含时间，阶段和观测"></a>在基于试次的任务中包含时间，阶段和观测</h1><p>许多神经科学和认知科学任务遵循额外的时间结构，这些结构被包含进<code>neurogym.TrialEnv</code>。这些任务通常</p><ol><li>描述为实际时间而不是离散时间步。例如，任务可以持续3s</li><li>每个试次包含许多时间阶段，比如刺激阶段和响应阶段。</li></ol><p>为了包含这些特征，neurogym任务通常支持设置每一步的时间长度<code>dt</code>（单位为ms），以及每个时间阶段的时间长度<code>timing</code>。</p><p>例如，考虑下面的二元决策任务，有500ms的刺激阶段，跟着500ms的决策阶段。可以通过<code>self._new_trial()</code>中的<code>self.add_period()</code>在每个试次中添加阶段。在<code>_step()</code>中，你可以通过<code>self.in_period(period_name)</code>检查任务当前所处的阶段。</p><div class="note warning flat"><p>关于这段代码，我真的向多说几句：官方文档给的这段示例代码有点问题，按它原本的写法，stimulus阶段不应该获得奖励，但是奖励却为1。我调试了很久，总觉得observation、action和reward之间错位了，但看代码又找不出具体问题。今天上午终于发现了，在<code>env.reset()</code>时stimulus阶段就开始了，等进入循环时时间步已经走了一步了，但是此时仍用初始的观测执行<code>env.step(action)</code>，就会造成reward不匹配。所以采取的修改方式是删掉循环外存储的<code>ob</code>，直接从第二个时间步开始，这样就不会错位了。</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> neurogym <span class="keyword">as</span> ngym</span><br><span class="line"><span class="keyword">import</span> gym</span><br><span class="line"><span class="keyword">from</span> neurogym <span class="keyword">import</span> TrialEnv</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.family&#x27;</span>] = <span class="string">&#x27;DejaVu Sans&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyDecisionEnv</span>(<span class="title class_ inherited__">TrialEnv</span>):</span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, dt=<span class="number">100</span>, timing=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="built_in">super</span>().__init__(dt=dt)</span><br><span class="line">    self.timing = &#123;<span class="string">&#x27;stimulus&#x27;</span>:<span class="number">500</span>, <span class="string">&#x27;decision&#x27;</span>:<span class="number">500</span>&#125;</span><br><span class="line">    <span class="keyword">if</span> timing:</span><br><span class="line">      self.timing.update(timing)</span><br><span class="line">    self.observation_space = gym.spaces.Box(-<span class="number">1.</span>, <span class="number">1.</span>, (<span class="number">1</span>,))</span><br><span class="line">    self.action_space = gym.spaces.Discrete(<span class="number">2</span>)</span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">_new_trial</span>(<span class="params">self</span>):</span><br><span class="line">    periods = [<span class="string">&#x27;stimulus&#x27;</span>, <span class="string">&#x27;decision&#x27;</span>]</span><br><span class="line">    self.add_period(periods)</span><br><span class="line"></span><br><span class="line">    stimulus = np.random.uniform(-<span class="number">1</span>, <span class="number">1</span>, (<span class="number">1</span>,))</span><br><span class="line">    trial = <span class="built_in">dict</span>()</span><br><span class="line">    trial[<span class="string">&#x27;stimulus&#x27;</span>] = stimulus</span><br><span class="line">    trial[<span class="string">&#x27;ground_truth&#x27;</span>] = (stimulus &gt; <span class="number">0</span>) * <span class="number">1.0</span></span><br><span class="line">    trial[<span class="string">&#x27;new_trial&#x27;</span>] = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">return</span> trial</span><br><span class="line"></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">_step</span>(<span class="params">self, action</span>):</span><br><span class="line">    <span class="keyword">if</span> self.in_period(<span class="string">&#x27;stimulus&#x27;</span>):</span><br><span class="line">      ob = np.array([self.trial[<span class="string">&#x27;stimulus&#x27;</span>]])</span><br><span class="line">      reward = <span class="number">0.</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">      ob = np.array([<span class="number">0.</span>])</span><br><span class="line">      reward = (action==self.trial[<span class="string">&#x27;ground_truth&#x27;</span>])*<span class="number">1.0</span></span><br><span class="line">   </span><br><span class="line">    done = <span class="literal">False</span></span><br><span class="line">    info = &#123;<span class="string">&#x27;new_trial&#x27;</span>: <span class="literal">False</span>&#125;</span><br><span class="line">    <span class="keyword">return</span> ob, reward, done, info</span><br><span class="line"></span><br><span class="line">log = &#123;<span class="string">&#x27;ob&#x27;</span>:[], <span class="string">&#x27;action&#x27;</span>:[], <span class="string">&#x27;reward&#x27;</span>:[]&#125;</span><br><span class="line">env = MyDecisionEnv(dt=<span class="number">100</span>)</span><br><span class="line">ob = env.reset()</span><br><span class="line"></span><br><span class="line"><span class="comment"># log[&#x27;ob&#x27;].append(ob)</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">20</span>):</span><br><span class="line">  action = env.action_space.sample()</span><br><span class="line">  log[<span class="string">&#x27;action&#x27;</span>].append(action)</span><br><span class="line">  ob, reward, done, info = env.step(action)</span><br><span class="line">  log[<span class="string">&#x27;reward&#x27;</span>].append(reward)</span><br><span class="line">  log[<span class="string">&#x27;ob&#x27;</span>].append(ob)</span><br><span class="line"></span><br><span class="line">log[<span class="string">&#x27;ob&#x27;</span>] = log[<span class="string">&#x27;ob&#x27;</span>][:-<span class="number">1</span>]</span><br><span class="line">f, axes = plt.subplots(<span class="number">3</span>, <span class="number">1</span>, sharex=<span class="literal">True</span>)</span><br><span class="line"><span class="keyword">for</span> ax, key <span class="keyword">in</span> <span class="built_in">zip</span>(axes, [<span class="string">&#x27;ob&#x27;</span>, <span class="string">&#x27;action&#x27;</span>, <span class="string">&#x27;reward&#x27;</span>]):</span><br><span class="line">  ax.plot(log[key], <span class="string">&#x27;o-&#x27;</span>)</span><br><span class="line">  ax.set_ylabel(key)</span><br></pre></td></tr></table></figure><p><img src="https://img.cwxhmk.top/post/20230721-1.png" alt="运行结果"></p><h1 id="在每个试次的开始设置观测和真实值"><a href="#在每个试次的开始设置观测和真实值" class="headerlink" title="在每个试次的开始设置观测和真实值"></a>在每个试次的开始设置观测和真实值</h1><p>在许多任务中，每个试次的观测和真实值是提前确定的，可以在<code>self._new_trial()</code>中设置。生成的观测和真实值可以用作监督学习的输入和目标。</p><p>观测和真实值可以在<code>self._new_trial()</code>中通过<code>self.add_ob()</code>和<code>self.set_groundtruth()</code>方法设置。用户可以用它们的名字指明观测的阶段和位置。比如，<code>self.add_ob(1, period=&#39;stimulus&#39;, where=&#39;fixation&#39;)</code>。</p><p>允许用户通过<code>self.ob</code>和<code>self.gt</code>访问整个试次的观测和真实值，并通过<code>self.ob_now</code>和<code>self.gt_now</code>访问它们的值。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> neurogym <span class="keyword">as</span> ngym</span><br><span class="line"><span class="keyword">import</span> gym</span><br><span class="line"><span class="keyword">from</span> neurogym <span class="keyword">import</span> TrialEnv</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.family&#x27;</span>] = <span class="string">&#x27;DejaVu Sans&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyDecisionEnv</span>(<span class="title class_ inherited__">TrialEnv</span>):</span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, dt=<span class="number">100</span>, timing=<span class="literal">None</span></span>): </span><br><span class="line">    <span class="comment"># 初始化，关键是设置观测空间和动作空间</span></span><br><span class="line">    <span class="built_in">super</span>().__init__(dt=dt)</span><br><span class="line">    self.timing = &#123;<span class="string">&#x27;stimulus&#x27;</span>:<span class="number">500</span>, <span class="string">&#x27;decision&#x27;</span>:<span class="number">500</span>&#125;</span><br><span class="line">    <span class="keyword">if</span> timing:</span><br><span class="line">      self.timing.update(timing)</span><br><span class="line">    </span><br><span class="line">    name = &#123;<span class="string">&#x27;fixation&#x27;</span>: <span class="number">0</span>, <span class="string">&#x27;stimulus&#x27;</span>: <span class="number">1</span>&#125;</span><br><span class="line">    self.observation_space = ngym.spaces.Box(low=-<span class="number">1</span>, high=<span class="number">1</span>, shape=(<span class="number">2</span>,), name=name) <span class="comment"># 可以给每个维度命名</span></span><br><span class="line">    name = &#123;<span class="string">&#x27;fixation&#x27;</span>:<span class="number">0</span>, <span class="string">&#x27;choice&#x27;</span>:[<span class="number">1</span>,<span class="number">2</span>]&#125;</span><br><span class="line">    self.action_space = ngym.spaces.Discrete(<span class="number">3</span>, name=name)</span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">_new_trial</span>(<span class="params">self</span>):</span><br><span class="line">    <span class="comment"># 返回试次相关信息：阶段，刺激，真实值等</span></span><br><span class="line">    periods = [<span class="string">&#x27;stimulus&#x27;</span>, <span class="string">&#x27;decision&#x27;</span>]</span><br><span class="line">    self.add_period(periods)</span><br><span class="line">    stimulus = np.random.uniform(-<span class="number">1</span>, <span class="number">1</span>, (<span class="number">1</span>,))</span><br><span class="line">    self.add_ob(<span class="number">1</span>, period=<span class="string">&quot;stimulus&quot;</span>, where=<span class="string">&quot;fixation&quot;</span>)</span><br><span class="line">    self.add_ob(stimulus, period=<span class="string">&quot;stimulus&quot;</span>, where=<span class="string">&quot;stimulus&quot;</span>)</span><br><span class="line">    <span class="comment"># where对应的是维度名</span></span><br><span class="line">    ground_truth = <span class="built_in">int</span>(stimulus &gt; <span class="number">0</span>)</span><br><span class="line">    self.set_groundtruth(ground_truth, period=<span class="string">&quot;decision&quot;</span>, where=<span class="string">&quot;choice&quot;</span>)</span><br><span class="line"></span><br><span class="line">    trial = <span class="built_in">dict</span>()</span><br><span class="line">    trial[<span class="string">&#x27;stimulus&#x27;</span>] = stimulus</span><br><span class="line">    trial[<span class="string">&#x27;ground_truth&#x27;</span>] = ground_truth</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> trial</span><br><span class="line"></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">_step</span>(<span class="params">self, action</span>):</span><br><span class="line">    <span class="comment"># 执行动作，返回观测，奖励等信息</span></span><br><span class="line">    reward = (action==self.gt_now) * <span class="number">1.0</span></span><br><span class="line">    done = <span class="literal">False</span> <span class="comment"># 环境是否需要重置</span></span><br><span class="line">    info = &#123;<span class="string">&#x27;new_trial&#x27;</span>: <span class="literal">False</span>&#125;</span><br><span class="line">    <span class="keyword">return</span> self.ob_now, reward, done, info</span><br><span class="line">env = MyDecisionEnv()</span><br><span class="line">_ = env.reset()</span><br><span class="line"></span><br><span class="line">trial = env.new_trial()</span><br><span class="line">ob, gt = env.ob, env.gt</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(trial)</span><br><span class="line"><span class="built_in">print</span>(ob)</span><br><span class="line"><span class="built_in">print</span>(gt)</span><br><span class="line">fig = ngym.utils.plot_env(env, num_trials=<span class="number">2</span>)</span><br></pre></td></tr></table></figure><h1 id="补充知识"><a href="#补充知识" class="headerlink" title="补充知识"></a>补充知识</h1><ol><li><strong>self：</strong> 在Python中，当定义一个类方法时，第一个参数通常被称为<code>self</code>，它代表类的实例对象，允许在类的方法中访问对象的属性和其他方法。</li><li><strong>super().<strong>init</strong>()：</strong> 在面向对象编程中，当创建一个子类时，通常需要继承父类的属性和方法，可以使用<code>super().__init__()</code>来调用父类的构造方法，确保父类的初始化代码得以执行。当<code>super().__init__()</code>不带参数时，它会调用父类的构造方法，并将子类的实例作为第一个参数传递给父类的构造方法。</li><li><strong>继承：</strong> 在面向对象编程中，继承是一种重要的概念，它允许你创建一个新的类（子类），从一个现有的类（父类）继承属性和方法。子类可以访问父类的属性和方法，并且还可以添加自己的属性和方法。如<code>class Child(Parent):</code> 这样的语法表示子类 Child 继承了父类 Parent。</li><li><strong>时间步（time step）：</strong> 在计算机科学和数学中，时间步长通常用于描述在离散时间模型中的时间间隔。理解时间步长的关键是认识到许多模型和系统在仿真或模拟时需要将时间划分成离散的部分，而时间步长就是这个离散化的单位。在每个时间步长内，系统的状态会被更新，从而使得系统在连续时间范围内的变化可以通过离散时间步长来近似。</li><li><strong>抽象方法：</strong> 抽象方法是指在父类中声明但没有具体实现的方法，它只有方法名、参数列表和文档字符串，没有具体的代码实现。子类继承这个父类时，必须实现这些抽象方法，否则子类也会被视为抽象类，无法实例化。</li></ol><h1 id="参考内容"><a href="#参考内容" class="headerlink" title="参考内容"></a>参考内容</h1><ul><li><a href="https://neurogym.github.io/index.html">neurogym’s documentation!</a></li><li><a href="https://www.gymlibrary.dev/content/basic_usage/">Gym Documentation</a></li><li><a href="https://gymnasium.farama.org/content/basic_usage/">Gymnasium Documentation</a></li><li><a href="https://zhuanlan.zhihu.com/p/89549054">接口与抽象基类</a></li></ul>]]></content>
    
    
    <summary type="html">别人做生物实验收数据，我写程序收数据，冲！</summary>
    
    
    
    <category term="学习笔记" scheme="http://chen.cwxhmk.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>二维脑片配准插件开发</title>
    <link href="http://chen.cwxhmk.top/2023/07/16/imagej-plugin-8/"/>
    <id>http://chen.cwxhmk.top/2023/07/16/imagej-plugin-8/</id>
    <published>2023-07-16T05:53:20.000Z</published>
    <updated>2025-02-02T03:29:13.166Z</updated>
    
    <content type="html"><![CDATA[<h1 id="具体步骤"><a href="#具体步骤" class="headerlink" title="具体步骤"></a>具体步骤</h1><ol><li><p>在Eclipse中配置Maven环境 Window → Preferences → Maven → Installations → Add → 找到Maven安装路径</p></li><li><p>创建Maven项目 File → New → Other → Maven Project → Create a simple project</p></li><li><p>编写组件并合理布局（FlowLayout和BoxLayout结合）</p><img src="https://img.cwxhmk.top/post/20230717-1.png" alt="界面展示" width="50%" height="50%" /> </li><li><p>编写<mark class="hl-label pink">选择按钮</mark> 和<mark class="hl-label pink">确认按钮</mark> 的触发事件</p></li><li><p>编写<mark class="hl-label pink">降采样按钮</mark> 、<mark class="hl-label pink">配准</mark> 、<mark class="hl-label pink">合并通道</mark> 和<mark class="hl-label pink">保存</mark> 的触发事件</p></li><li><p>整理目录结构：<code>input</code>文件夹存放原始脑片，<code>output</code>文件夹存放配准合并完成的图片，<code>params</code>文件夹存放配准参数，<code>registration</code>文件夹存放中间处理过程得到的图片以及配准文件<br><img src="https://img.cwxhmk.top/post/20230719-3.png" alt="目录结构"></p></li><li><p><code>Run as Maven build</code>生成jar包</p></li></ol><h1 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h1><p><img src="https://img.cwxhmk.top/gif/7caa0525-2d17-4fd1-b3a8-c63d54d0b051.gif" alt="效果展示"></p><h1 id="问题记录"><a href="#问题记录" class="headerlink" title="问题记录"></a>问题记录</h1><ol><li>为什么编写了按钮的触发事件后，运行程序时点击按钮没有反应？<br><strong>答：</strong>需要调用event()函数！</li><li>想获取tempImage.tif中某一张图片，但是总报错说out of range<br><strong>答：</strong>不能在使用<code>tempStack.getProcessor(tempIndex)</code>之前使用<code>tempImage.close()</code>，但手动关闭是不影响的。</li><li>Java中string转int<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">tempIndex</span> <span class="operator">=</span> Integer.valueOf(tempNum.getText());</span><br></pre></td></tr></table></figure></li><li>运行命令行输出的内容如何动态打印到JTextArea<div class="note info flat"><ol start="5"><li>如何获取<code>resources</code>下的文件？<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">this</span>.getClass().getClassLoader().getResource(<span class="string">&quot;tempImage.tif&quot;</span>).getPath()</span><br></pre></td></tr></table></figure><strong>ChatGPT:</strong><br>当你在执行命令行时，使用Runtime.getRuntime().exec()方法或ProcessBuilder类的start()方法会创建一个新的进程来运行命令。这个新的进程与你的Java程序是独立的，它在操作系统中运行，并与你的Java程序并行执行。这意味着在主线程中执行命令行时，主线程将会被阻塞（即暂停执行），直到命令行执行完毕。</li></ol><p>如果命令行的输出量较大，或者命令行执行时间较长，主线程被阻塞的时间会很长，可能导致你的界面无响应，因为界面的更新和事件处理通常也是在主线程中进行的。</p><p>通过创建一个新的线程来执行命令行，我们实现了并发执行。这意味着在主线程中调用registration()方法时，新线程会被启动，然后在新线程中执行命令行，而主线程会继续执行接下来的代码，保持界面的响应。这样，即使命令行执行时间很长，主线程也不会被阻塞，界面仍然可以响应用户的交互。</p><p>在新线程中，我们使用BufferedReader来读取命令行的输出流，并实时将输出内容追加到JTextArea中，通过调用pluginMain.logMessage.repaint()来强制刷新文本区域，使得输出内容在JTextArea中动态显示。</p><p>使用新线程来执行耗时操作，如命令行执行、网络请求等，是一种常见的做法，它能够有效地保持界面的响应性，提升用户体验。在Java中，你可以通过创建Thread对象，或者使用ExecutorService等高级并发工具来管理线程的执行。</p></div></li><li>调用transform方法时，JTextArea中的内容为什么没有更新<div class="note info flat"><p><strong>ChatGPT:</strong><br>根据你提供的Registration类中的registration()和transform()方法，我注意到在调用transform()方法之前，你通过创建线程来执行了elastix命令。在这种情况下，可能出现elastix命令尚未执行完成，就开始执行transform()方法。</p><p>由于两个命令都是通过独立的线程执行的，所以在elastix命令执行期间，可能会同时执行transform()方法。因此，你可能会看到命令输出结果交错显示，甚至transform()方法的输出可能会被elastix命令的输出覆盖。</p><p>为了确保elastix命令执行完毕后再执行transform()方法，你可以在registration()方法中等待elastix命令执行完成后再调用transform()方法。可以使用Process对象的waitFor()方法，该方法会阻塞当前线程，直到命令执行完成。</p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">registration</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">elastixUrl</span> <span class="operator">=</span> <span class="string">&quot;D:/Desktop/brainPro/elastix&quot;</span>;</span><br><span class="line">    <span class="type">String</span> <span class="variable">brainUrl</span> <span class="operator">=</span> <span class="string">&quot;D:/Desktop/brainPro/registration/resizedImage.tif&quot;</span>;</span><br><span class="line">    <span class="type">String</span> <span class="variable">regisTempUrl</span> <span class="operator">=</span> <span class="string">&quot;D:/Desktop/brainPro/registration/regisTemp.tif&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">String</span> <span class="variable">cmd</span> <span class="operator">=</span> elastixUrl + <span class="string">&quot; -f &quot;</span> + brainUrl + <span class="string">&quot; -m &quot;</span> + regisTempUrl + <span class="string">&quot; -out &quot;</span> + output_1 + <span class="string">&quot; -p &quot;</span> + GlobalPath+<span class="string">&quot;params/para-Standard_bspline.txt&quot;</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">Thread</span>(() -&gt; &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">Process</span> <span class="variable">ps</span> <span class="operator">=</span> Runtime.getRuntime().exec(cmd);</span><br><span class="line">            <span class="type">BufferedReader</span> <span class="variable">br</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(ps.getInputStream()));</span><br><span class="line">            String line;</span><br><span class="line">            <span class="keyword">while</span> ((line = br.readLine()) != <span class="literal">null</span>) &#123;</span><br><span class="line">                pluginMain.logMessage.append(line + <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">                pluginMain.logMessage.setCaretPosition(pluginMain.logMessage.getDocument().getLength()); <span class="comment">// 滚动到文本末尾</span></span><br><span class="line">                pluginMain.logMessage.repaint(); <span class="comment">// 强制刷新文本区域</span></span><br><span class="line">            &#125;</span><br><span class="line">            ps.waitFor(); <span class="comment">// 等待命令执行完成</span></span><br><span class="line">            transform(); <span class="comment">// 在elastix命令执行完成后调用transform()方法</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;).start();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>如何确定配准全部完成后再执行接下来的程序？<div class="note info flat"><p><strong>ChatGPT:</strong><br>当我们在Java中定义一个接口，实际上是在创建一种契约，定义了一组方法的签名，而不包含方法的实现。其他类可以实现这个接口并提供实际的方法实现，从而达到对某种功能或行为的规范和约束。在这里，我们要使用接口来实现回调机制，回调机制是一种异步通信的方式，允许一个对象在特定事件发生时通知另一个对象执行特定的操作。</p><p>首先，我们定义一个接口RegistrationCallback，其中包含方法：onTransformCompleted()。</p><p>这个接口中并没有实现任何方法，只是规定了这两个方法的签名。现在我们将在Registration类中使用这个接口。在Registration类中添加一个私有成员变量callback，用于保存实现了RegistrationCallback接口的对象。</p><p>在registration()方法中，我们可以接收一个实现了RegistrationCallback接口的对象，并将它保存在callback变量中。</p><p>在transform()方法中的合适时机调用回调方法。在onTransformFinished()方法中，我们会首先检查callback是否为null，如果不为null，则调用回调对象的对应方法。</p><p>现在，当我们在pluginMain类的registrationBtn监听器中调用Registration类的registration()方法时，我们可以传递一个实现了RegistrationCallback接口的对象。这样，在配准和转换完成后，Registration类会调用回调方法，并在回调方法中执行相应的操作。</p><p>这样可以确保在配准和转换都完成后再执行相关操作。</p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 新建一个接口RegistrationCallback.java</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">RegistrationCallback</span> &#123;</span><br><span class="line"><span class="keyword">void</span> <span class="title function_">onTransformCompleted</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Registration.java</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Registration</span> &#123;</span><br><span class="line"><span class="keyword">private</span> RegistrationCallback callback;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">String</span> <span class="variable">GlobalPath</span> <span class="operator">=</span> <span class="string">&quot;D:/Desktop/brainPro/&quot;</span>;</span><br><span class="line"><span class="keyword">public</span> String output_1= <span class="string">&quot;D:/Desktop/brainPro/registration/temp1&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">registration</span><span class="params">(RegistrationCallback callback)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.callback = callback;</span><br><span class="line"><span class="type">String</span> <span class="variable">elastixUrl</span> <span class="operator">=</span> <span class="string">&quot;D:/Desktop/brainPro/elastix&quot;</span>;</span><br><span class="line"><span class="type">String</span> <span class="variable">brainUrl</span> <span class="operator">=</span> <span class="string">&quot;D:/Desktop/brainPro/registration/resizedImage.tif&quot;</span>;</span><br><span class="line"><span class="type">String</span> <span class="variable">regisTempUrl</span> <span class="operator">=</span> <span class="string">&quot;D:/Desktop/brainPro/registration/regisTemp.tif&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">String</span> <span class="variable">cmd</span> <span class="operator">=</span> elastixUrl + <span class="string">&quot; -f &quot;</span> + brainUrl + <span class="string">&quot; -m &quot;</span> + regisTempUrl + <span class="string">&quot; -out &quot;</span> + output_1 + <span class="string">&quot; -p &quot;</span> + GlobalPath+<span class="string">&quot;params/para-Standard_bspline.txt&quot;</span>;</span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Thread</span>(() -&gt; &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="type">Process</span> <span class="variable">ps</span> <span class="operator">=</span> Runtime.getRuntime().exec(cmd);</span><br><span class="line">                <span class="comment">// ps.getInputStream() 获取进程的输出流</span></span><br><span class="line">                <span class="type">BufferedReader</span> <span class="variable">br</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(ps.getInputStream()));</span><br><span class="line">                String line;</span><br><span class="line">                <span class="keyword">while</span> ((line = br.readLine()) != <span class="literal">null</span>) &#123;</span><br><span class="line">                    pluginMain.logMessage.append(line + <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">                    pluginMain.logMessage.setCaretPosition(pluginMain.logMessage.getDocument().getLength()); <span class="comment">// 滚动到文本末尾</span></span><br><span class="line">                    pluginMain.logMessage.repaint(); <span class="comment">// 强制刷新文本区域</span></span><br><span class="line">                &#125;</span><br><span class="line">                ps.waitFor();</span><br><span class="line">                transform();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).start();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">transform</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="type">String</span> <span class="variable">transformixUrl</span> <span class="operator">=</span> <span class="string">&quot;D:/Desktop/brainPro/transformix&quot;</span>;</span><br><span class="line"><span class="type">String</span> <span class="variable">outputDir</span> <span class="operator">=</span> <span class="string">&quot;D:/Desktop/brainPro/registration/temp2&quot;</span>;</span><br><span class="line"><span class="type">String</span> <span class="variable">regisAnnoUrl</span> <span class="operator">=</span> <span class="string">&quot;D:/Desktop/brainPro/registration/regisAnno.tif&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">String</span> <span class="variable">cmd</span> <span class="operator">=</span> transformixUrl + <span class="string">&quot; -in &quot;</span> + regisAnnoUrl + <span class="string">&quot; -out &quot;</span> + outputDir + <span class="string">&quot; -tp &quot;</span> + output_1 + <span class="string">&quot;/TransformParameters.0.txt&quot;</span>;</span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Thread</span>(() -&gt; &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="type">Process</span> <span class="variable">ps</span> <span class="operator">=</span> Runtime.getRuntime().exec(cmd);</span><br><span class="line">                <span class="type">BufferedReader</span> <span class="variable">br</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(ps.getInputStream()));</span><br><span class="line">                String line;</span><br><span class="line">                <span class="keyword">while</span> ((line = br.readLine()) != <span class="literal">null</span>) &#123;</span><br><span class="line">                    pluginMain.logMessage.append(line + <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">                    pluginMain.logMessage.setCaretPosition(pluginMain.logMessage.getDocument().getLength()); <span class="comment">// 滚动到文本末尾</span></span><br><span class="line">                    pluginMain.logMessage.repaint(); <span class="comment">// 强制刷新文本区域</span></span><br><span class="line">                &#125;</span><br><span class="line">                ps.waitFor();</span><br><span class="line">                onTransformFinished();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).start();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">onTransformFinished</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (callback != <span class="literal">null</span>) &#123;</span><br><span class="line">            callback.onTransformCompleted();</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// pluginMain.java</span></span><br><span class="line">registrationBtn.addActionListener(<span class="keyword">new</span> <span class="title class_">ActionListener</span>() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">actionPerformed</span><span class="params">(ActionEvent e)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Registration</span>().registration(<span class="keyword">new</span> <span class="title class_">RegistrationCallback</span>() &#123;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onTransformCompleted</span><span class="params">()</span> &#123;</span><br><span class="line">                <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">                regisAnno = <span class="keyword">new</span> <span class="title class_">ImagePlus</span>(<span class="string">&quot;D:/Desktop/brainPro/registration/temp2/result.tif&quot;</span>);</span><br><span class="line">                logMessage.append(<span class="string">&quot;4. 配准已完成&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;);</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ol><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><ul><li><a href="https://blog.csdn.net/weixin_43853855/article/details/117073100">maven环境的搭建+eclipse中配置Maven(详细)</a></li><li><a href="https://blog.csdn.net/weixin_41287260/article/details/94317629">Java的AWT控件Button内容乱码的处理方案</a></li><li><a href="https://blog.csdn.net/sweetgirl520/article/details/51346076">java Swing布局管理之BoxLayout布局</a></li><li><a href="https://blog.csdn.net/paullinjie/article/details/51727753">JPanel左对齐</a></li><li><a href="https://blog.csdn.net/m0_46428066/article/details/115073560">eclipse中在pom.xml添加依赖</a></li><li><a href="https://blog.csdn.net/liang5630/article/details/25651491">JFileChooser (Java Swing提供的文件选择对话框)</a></li><li><a href="https://www.cnblogs.com/jone-chen/p/14270358.html">Java整数间的除法运算那点事</a></li><li><a href="https://blog.csdn.net/One_castle/article/details/100177788">java中如何将String类型转化为double类型</a></li><li><a href="https://blog.csdn.net/qq_35573326/article/details/79974366">Java除法运算（保留小数）</a></li></ul>]]></content>
    
    
    <summary type="html">学了两周BIRDS插件的代码，终于要开发自己的插件了！</summary>
    
    
    
    <category term="项目实战" scheme="http://chen.cwxhmk.top/categories/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/"/>
    
    
    <category term="Eclipse" scheme="http://chen.cwxhmk.top/tags/Eclipse/"/>
    
  </entry>
  
</feed>
